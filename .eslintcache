[{"F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\index.js":"1","F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\reportWebVitals.js":"2","F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\Components\\Home\\Home.jsx":"3","F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\App.jsx":"4","F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\Components\\Shared\\HeaderComponent\\HeaderComponent.jsx":"5","F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\Components\\Shared\\Footer\\Footer.jsx":"6","F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\Components\\Auth\\Login\\Login.jsx":"7","F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\Components\\Auth\\Registeration\\Registeration.jsx":"8","F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\Components\\TodoList\\TodoList.jsx":"9","F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\Components\\TodoList\\TodoForm\\TodoForm.jsx":"10","F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\Components\\TodoList\\Todo\\Todo.jsx":"11","F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\Services\\AuthService.js":"12","F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\config.js":"13","F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\Services\\TodosService.js":"14","F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\Components\\ProtectedRoute.jsx":"15","F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\Components\\isAuthunticatedRoute.jsx":"16","F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\Components\\IsAuthunticatedRoute.jsx":"17","F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\Components\\Shared\\Loader\\Loader.jsx":"18","D:\\reactworkspace\\learning\\todolist\\src\\index.js":"19","D:\\reactworkspace\\learning\\todolist\\src\\Components\\TodoList\\TodoList.jsx":"20","D:\\reactworkspace\\learning\\todolist\\src\\Components\\Auth\\Login\\Login.jsx":"21","D:\\reactworkspace\\learning\\todolist\\src\\Components\\TodoList\\Todo\\Todo.jsx":"22","D:\\reactworkspace\\learning\\todolist\\src\\Components\\TodoList\\TodoForm\\TodoForm.jsx":"23","D:\\reactworkspace\\learning\\todolist\\src\\Components\\ProtectedRoute.jsx":"24","D:\\reactworkspace\\learning\\todolist\\src\\Components\\IsAuthunticatedRoute.jsx":"25","D:\\reactworkspace\\learning\\todolist\\src\\App.jsx":"26","D:\\reactworkspace\\learning\\todolist\\src\\Components\\Auth\\Registeration\\Registeration.jsx":"27","D:\\reactworkspace\\learning\\todolist\\src\\Services\\TodosService.js":"28","D:\\reactworkspace\\learning\\todolist\\src\\Components\\TodoList\\TodoPage\\TodoPage.jsx":"29","D:\\reactworkspace\\learning\\todolist\\src\\Components\\Shared\\HeaderComponent\\HeaderComponent.jsx":"30","D:\\reactworkspace\\learning\\todolist\\src\\Components\\Shared\\Field\\Field.jsx":"31","D:\\reactworkspace\\learning\\todolist\\src\\reportWebVitals.js":"32","D:\\reactworkspace\\learning\\todolist\\src\\Services\\AuthService.js":"33","D:\\reactworkspace\\learning\\todolist\\src\\Components\\Home\\Home.jsx":"34","D:\\reactworkspace\\learning\\todolist\\src\\Components\\Shared\\Pagination\\Pagination.jsx":"35"},{"size":504,"mtime":1609590775573,"results":"36","hashOfConfig":"37"},{"size":362,"mtime":1607939826535,"results":"38","hashOfConfig":"37"},{"size":361,"mtime":1609560749529,"results":"39","hashOfConfig":"37"},{"size":1980,"mtime":1609761603104,"results":"40","hashOfConfig":"37"},{"size":2503,"mtime":1609787353066,"results":"41","hashOfConfig":"37"},{"size":252,"mtime":1609596793717,"results":"42","hashOfConfig":"37"},{"size":3083,"mtime":1609839916120,"results":"43","hashOfConfig":"37"},{"size":3384,"mtime":1609686435838,"results":"44","hashOfConfig":"37"},{"size":2114,"mtime":1609840408662,"results":"45","hashOfConfig":"37"},{"size":1289,"mtime":1609787462274,"results":"46","hashOfConfig":"37"},{"size":1770,"mtime":1609720646643,"results":"47","hashOfConfig":"37"},{"size":2493,"mtime":1609761367012,"results":"48","hashOfConfig":"37"},{"size":397,"mtime":1609638248382,"results":"49","hashOfConfig":"37"},{"size":1892,"mtime":1609725647630,"results":"50","hashOfConfig":"37"},{"size":601,"mtime":1609786907619,"results":"51","hashOfConfig":"37"},{"size":506,"mtime":1609754426515,"results":"52","hashOfConfig":"37"},{"size":547,"mtime":1609757960801,"results":"53","hashOfConfig":"37"},{"size":311,"mtime":1609840205224,"results":"54","hashOfConfig":"37"},{"size":504,"mtime":1609590775573,"results":"55","hashOfConfig":"56"},{"size":4687,"mtime":1610587391781,"results":"57","hashOfConfig":"56"},{"size":4822,"mtime":1610449397818,"results":"58","hashOfConfig":"56"},{"size":2502,"mtime":1610140199350,"results":"59","hashOfConfig":"56"},{"size":1379,"mtime":1609995067023,"results":"60","hashOfConfig":"56"},{"size":601,"mtime":1609786907619,"results":"61","hashOfConfig":"56"},{"size":547,"mtime":1609757960801,"results":"62","hashOfConfig":"56"},{"size":2470,"mtime":1610585906880,"results":"63","hashOfConfig":"56"},{"size":3836,"mtime":1610373279885,"results":"64","hashOfConfig":"56"},{"size":3446,"mtime":1610125249999,"results":"65","hashOfConfig":"56"},{"size":3673,"mtime":1610126541000,"results":"66","hashOfConfig":"56"},{"size":2540,"mtime":1610141727223,"results":"67","hashOfConfig":"56"},{"size":765,"mtime":1610366389268,"results":"68","hashOfConfig":"56"},{"size":362,"mtime":1607939826535,"results":"69","hashOfConfig":"56"},{"size":3283,"mtime":1610585553624,"results":"70","hashOfConfig":"56"},{"size":648,"mtime":1610585918719,"results":"71","hashOfConfig":"56"},{"size":3044,"mtime":1610447399032,"results":"72","hashOfConfig":"56"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},"fyjkkl",{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},"m7q2or",{"filePath":"119","messages":"120","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"146"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"150"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161"},"F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\index.js",[],["162","163"],"F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\reportWebVitals.js",[],"F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\Components\\Home\\Home.jsx",[],"F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\App.jsx",["164","165","166"],"F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\Components\\Shared\\HeaderComponent\\HeaderComponent.jsx",["167","168"],"F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\Components\\Shared\\Footer\\Footer.jsx",[],["169","170"],"F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\Components\\Auth\\Login\\Login.jsx",["171"],"import React, { useState, useContext } from \"react\";\r\nimport \"./Login.scss\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as authservices from \"../../../Services/AuthService\";\r\nimport { userTokenContext } from \"../../../App\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Loader from \"../../Shared/Loader/Loader\";\r\n\r\nconst Login = ({ userToken, setUserToken }) => {\r\n  let newUser = useContext(userTokenContext);\r\n  const [user, setUser] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  const [isLoading, setisLoading] = useState(false);\r\n  const history = useHistory();\r\n\r\n  let onchangeInput = (e) => {\r\n    setUser({\r\n      ...user,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n\r\n    console.log(newUser);\r\n    // console.log(\"userToken\", userToken);\r\n  };\r\n\r\n  let onSubmitForm = (e) => {\r\n    e.preventDefault();\r\n    setisLoading(true);\r\n    authservices.login(user).then((res) => {\r\n      setisLoading(false);\r\n      localStorage.setItem(\"todoToken\", JSON.stringify(res.token));\r\n      setUserToken(res.token);\r\n\r\n      setUser({\r\n        email: \"\",\r\n        password: \"\",\r\n      });\r\n      history.push(\"/todolist\");\r\n\r\n      // console.log(res);\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      <section className=\"login-section\">\r\n        <div className=\"container main-form-container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6 offset-md-3\">\r\n              <div className=\"form-contianer\">\r\n                {isLoading && <Loader />}\r\n                <h3 className=\"title\">login</h3>\r\n\r\n                <form className=\"form\" onSubmit={onSubmitForm}>\r\n                  <div className=\"form-group\">\r\n                    <label>E-mail</label>\r\n\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"email\"\r\n                      id=\"\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"example : demo@demo.com\"\r\n                      value={user.email}\r\n                      onChange={onchangeInput}\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <label>Password</label>\r\n                    <input\r\n                      type=\"password\"\r\n                      name=\"password\"\r\n                      id=\"\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"example : demodemo\"\r\n                      value={user.password}\r\n                      onChange={onchangeInput}\r\n                    />\r\n                  </div>\r\n\r\n                  <Link to=\"/register\" className=\"reg-link\">\r\n                    register new account\r\n                  </Link>\r\n\r\n                  <button\r\n                    className=\"submit\"\r\n                    value=\"submit\"\r\n                    className=\"submit-btn\"\r\n                  >\r\n                    Submit\r\n                  </button>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\Components\\Auth\\Registeration\\Registeration.jsx",["172"],"import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Registeration.scss\";\r\nimport * as authservices from \"../../../Services/AuthService\";\r\nimport { useHistory } from \"react-router-dom\";\r\nfunction Registeration() {\r\n  const [user, setUser] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    age: 0,\r\n  });\r\n  const history = useHistory();\r\n\r\n  let inputOnChange = (e) => {\r\n    setUser({\r\n      ...user,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  let onSubmit = (e) => {\r\n    e.preventDefault();\r\n    authservices.registeration(user).then((res) => {\r\n      setUser({\r\n        name: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        age: 0,\r\n      });\r\n      console.log(res);\r\n      history.push(\"/login\");\r\n    });\r\n  };\r\n  return (\r\n    <section className=\"login-section\">\r\n      <div className=\"container main-form-container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6 offset-md-3\">\r\n            <div className=\"form-contianer\">\r\n              <h3 className=\"title\">registeration</h3>\r\n              <form action=\"\" className=\"form\" onSubmit={onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <label>Name</label>\r\n\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    id=\"\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"\"\r\n                    value={user.name}\r\n                    onChange={inputOnChange}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label>E-mail</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"email\"\r\n                    id=\"\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"\"\r\n                    value={user.email}\r\n                    onChange={inputOnChange}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label>Password</label>\r\n                  <input\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    id=\"\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"\"\r\n                    value={user.password}\r\n                    onChange={inputOnChange}\r\n                  />\r\n                </div>\r\n\r\n                {/* <!-- age --> */}\r\n                <div className=\"form-group\">\r\n                  <label>Age</label>\r\n                  <input\r\n                    type=\"number\"\r\n                    name=\"age\"\r\n                    id=\"\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"\"\r\n                    value={user.age}\r\n                    onChange={inputOnChange}\r\n                  />\r\n                </div>\r\n\r\n                <Link to=\"/login\" className=\"reg-link\">\r\n                  I already have account\r\n                </Link>\r\n\r\n                <button\r\n                  className=\"submit\"\r\n                  value=\"submit\"\r\n                  className=\"submit-btn\"\r\n                >\r\n                  Submit\r\n                </button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Registeration;\r\n","F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\Components\\TodoList\\TodoList.jsx",["173","174"],"import React, { useEffect, useState } from \"react\";\r\nimport \"./TodoList.scss\";\r\nimport TodoForm from \"./TodoForm/TodoForm\";\r\nimport Todo from \"./Todo/Todo\";\r\nimport * as todoservice from \"../../Services/TodosService\";\r\nimport Loader from \"../Shared/Loader/Loader\";\r\n\r\nconst TodoList = () => {\r\n  let utoken = \"\";\r\n  let [toAddTask, settoAddTask] = useState({\r\n    description: \"\",\r\n  });\r\n\r\n  let [allTasks, setallTasks] = useState([]);\r\n  const [listLoading, setlistLoading] = useState(false);\r\n\r\n  let getAllTasks = () => {\r\n    setlistLoading(true);\r\n    utoken = JSON.parse(localStorage.getItem(\"todoToken\"));\r\n    todoservice.getAllTasks(utoken).then((res) => {\r\n      setallTasks(res.data.data);\r\n      setlistLoading(false);\r\n    });\r\n  };\r\n\r\n  let addTask = () => {\r\n    utoken = JSON.parse(localStorage.getItem(\"todoToken\"));\r\n    todoservice.addTask(utoken, toAddTask).then((res) => {\r\n      if (res.data.success) {\r\n        setallTasks([...allTasks, res.data.data]);\r\n        settoAddTask({\r\n          description: \"\",\r\n        });\r\n      }\r\n      console.log(res);\r\n    });\r\n  };\r\n\r\n  let onSubmitForm = (e) => {\r\n    e.preventDefault();\r\n    addTask();\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAllTasks();\r\n  }, []);\r\n\r\n  return (\r\n    <section className=\"todo-home-section\">\r\n      <TodoForm\r\n        toAddTask={toAddTask}\r\n        settoAddTask={settoAddTask}\r\n        onSubmitForm={onSubmitForm}\r\n      />\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6 offset-md-3\">\r\n            <ul className=\"todo-list\">\r\n              {<Loader />}\r\n              {allTasks &&\r\n                allTasks.map((task) => {\r\n                  return (\r\n                    <Todo\r\n                      key={task._id}\r\n                      task={task}\r\n                      allTasks={allTasks}\r\n                      setallTasks={setallTasks}\r\n                    />\r\n                  );\r\n                })}\r\n\r\n              {/* <Todo /> */}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\Components\\TodoList\\TodoForm\\TodoForm.jsx",[],"F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\Components\\TodoList\\Todo\\Todo.jsx",["175","176"],"import React from \"react\";\r\nimport * as todoservice from \"../../../Services/TodosService\";\r\n\r\nconst Todo = ({ task, allTasks, setallTasks }) => {\r\n  let utoken = \"\";\r\n  let toggleCompleted = (taskId, isCompleted) => {\r\n    utoken = JSON.parse(localStorage.getItem(\"todoToken\"));\r\n    todoservice.toggleCompleted(utoken, taskId, isCompleted).then((res) => {\r\n      console.log(\"toggleCompleted\", res);\r\n\r\n      let wantedElement = allTasks.find((el) => el._id == taskId);\r\n      let elementIndex = allTasks.indexOf(wantedElement);\r\n      allTasks[elementIndex].completed = !isCompleted;\r\n      debugger;\r\n      let newAllTasks = [...allTasks];\r\n\r\n      setallTasks(newAllTasks);\r\n    });\r\n  };\r\n\r\n  // =================================================\r\n  let deleteTask = (taskId) => {\r\n    utoken = JSON.parse(localStorage.getItem(\"todoToken\"));\r\n    todoservice.deleteTask(utoken, taskId).then((res) => {\r\n      console.log(\"delete response\", res);\r\n\r\n      let wantedElement = allTasks.find((el) => el._id == taskId);\r\n      let elementIndex = allTasks.indexOf(wantedElement);\r\n      allTasks.splice(elementIndex, 1);\r\n      let newAllTasks = [...allTasks];\r\n\r\n      setallTasks(newAllTasks);\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"todo\">\r\n        <li className={`todo-item ${task.completed && \"completed\"}`}>\r\n          {task.description}\r\n        </li>\r\n        <button\r\n          className=\"complete-btn\"\r\n          onClick={() => toggleCompleted(task._id, task.completed)}\r\n        >\r\n          <i className=\"fas fa-check\"></i>\r\n        </button>\r\n        <button className=\"trash-btn\" onClick={() => deleteTask(task._id)}>\r\n          <i className=\"fas fa-trash\"></i>\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Todo;\r\n","F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\Services\\AuthService.js",[],"F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\config.js",[],"F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\Services\\TodosService.js",[],["177","178"],"F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\Components\\ProtectedRoute.jsx",[],"F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\Components\\isAuthunticatedRoute.jsx",["179"],"F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\Components\\IsAuthunticatedRoute.jsx",[],"F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\Components\\Shared\\Loader\\Loader.jsx",[],"D:\\reactworkspace\\learning\\todolist\\src\\index.js",[],["180","181"],"D:\\reactworkspace\\learning\\todolist\\src\\Components\\TodoList\\TodoList.jsx",["182","183","184","185","186"],"import React, { useEffect, useState } from \"react\";\r\nimport \"./TodoList.scss\";\r\nimport TodoForm from \"./TodoForm/TodoForm\";\r\nimport Todo from \"./Todo/Todo\";\r\nimport * as todoservice from \"../../Services/TodosService\";\r\nimport * as authservices from \"../../Services/AuthService\";\r\nimport Loader from \"../Shared/Loader/Loader\";\r\nimport Pagination from \"../Shared/Pagination/Pagination\";\r\n\r\n\r\nconst TodoList = () => {\r\n  let utoken = \"\";\r\n  let [toAddTask, settoAddTask] = useState({\r\n    description: \"\",\r\n  });\r\n\r\n  let [allTasks, setallTasks] = useState([]);\r\n  let [filteredallTasks, setfilteredallTasks] = useState([]);\r\n\r\n  let [filterByValue, setfilterByValue] = useState(0);\r\n  const [listLoading, setlistLoading] = useState(false);\r\n\r\n  const [selectedPage, setSelectedPage] = React.useState(1);\r\n\r\n\r\n  let [tasksInView, settasksInView] = useState([]);\r\n  const [pageSize, setPageSize] = React.useState(10);\r\n  const [page, setPage] = React.useState(1);\r\n\r\n\r\n  let getAllTasks = () => {\r\n    setlistLoading(true);\r\n    utoken = JSON.parse(localStorage.getItem(\"todoToken\"));\r\n    todoservice.getAllTasks(utoken).then((res) => {\r\n\r\n      console.log(res.data.data);\r\n      // res.data.data.fore\r\n\r\n      let newData = [];\r\n      res.data.data.forEach((element, index) => {\r\n        element['isLoadingDelete'] = false;\r\n        element['isLoadingToggle'] = false;\r\n\r\n        newData.push(element)\r\n\r\n      });\r\n      setallTasks(newData);\r\n      setlistLoading(false);\r\n    });\r\n  };\r\n\r\n  let addTask = () => {\r\n    utoken = JSON.parse(localStorage.getItem(\"todoToken\"));\r\n    todoservice.addTask(utoken, toAddTask).then((res) => {\r\n      if (res.data.success) {\r\n\r\n        res.data.data['isLoadingDelete'] = false;\r\n        res.data.data['isLoadingToggle'] = false;\r\n\r\n        setallTasks([...allTasks, res.data.data]);\r\n        settoAddTask({\r\n          description: \"\",\r\n        });\r\n      }\r\n      console.log(res);\r\n    });\r\n  };\r\n\r\n  let onSubmitForm = (e) => {\r\n    e.preventDefault();\r\n    addTask();\r\n  };\r\n\r\n  let getLoggedInUser = () => {\r\n    utoken = JSON.parse(localStorage.getItem(\"todoToken\"));\r\n    authservices.getLoggednUser(utoken).then(res => {\r\n      console.log('getLoggednUser', res);\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    getAllTasks();\r\n    getLoggedInUser();\r\n  }, []);\r\n\r\n\r\n  useEffect(() => {\r\n    filterBy();\r\n  }, [allTasks, filterByValue])\r\n\r\n\r\n  let paginationFn = () => {\r\n    if (!(filteredallTasks && filteredallTasks.length > 0)) {\r\n      settasksInView([])\r\n      return;\r\n    } else {\r\n      let list = [...filteredallTasks]\r\n      settasksInView(list.slice(pageSize * (page - 1), pageSize * page));\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n\r\n    paginationFn();\r\n  }, [filteredallTasks, page, pageSize])\r\n\r\n\r\n  let filterBy = () => {\r\n    let allTasksCpy = [...allTasks];\r\n\r\n    switch (+filterByValue) {\r\n      case 0:\r\n        setfilteredallTasks(allTasksCpy);\r\n        break;\r\n      case 1:\r\n        let newFilteredCpy = allTasksCpy.filter(el => { return el.completed === true });\r\n        setfilteredallTasks(newFilteredCpy);\r\n        break;\r\n      case 2:\r\n        let newFilteredCpy2 = allTasksCpy.filter(el => el.completed === false);\r\n        setfilteredallTasks(newFilteredCpy2);\r\n        break;\r\n      default:\r\n      // code block\r\n    }\r\n  }\r\n  return (\r\n    <section className=\"todo-home-section\">\r\n      <TodoForm\r\n        toAddTask={toAddTask}\r\n        settoAddTask={settoAddTask}\r\n        onSubmitForm={onSubmitForm}\r\n\r\n        filterByValue={filterByValue}\r\n        setfilterByValue={setfilterByValue}\r\n      />\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6 offset-md-3\">\r\n            <ul className=\"todo-list\">\r\n              {listLoading && tasksInView && <Loader />}\r\n              {tasksInView &&\r\n                tasksInView.map((task) => {\r\n                  return (\r\n                    <Todo\r\n                      key={task._id}\r\n                      task={task}\r\n                      allTasks={allTasks}\r\n                      setallTasks={setallTasks}\r\n                    />\r\n                  );\r\n                })}\r\n\r\n              {/* <Todo /> */}\r\n            </ul>\r\n\r\n            {!listLoading && tasksInView.length > 0 &&\r\n              <Pagination\r\n                pageSize={pageSize}\r\n                page={page}\r\n                count={filteredallTasks?.length ?? 0}\r\n                onChange={(t, v) => {\r\n                  if (t === 1) setPageSize(v);\r\n                  else if (t === 2) setPage(v);\r\n                }}\r\n              />}\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","D:\\reactworkspace\\learning\\todolist\\src\\Components\\Auth\\Login\\Login.jsx",["187","188","189","190","191","192"],"import React, { useState, useContext } from \"react\";\r\nimport \"./Login.scss\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as authservices from \"../../../Services/AuthService\";\r\nimport { userTokenContext } from \"../../../App\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Loader from \"../../Shared/Loader/Loader\";\r\nimport Field from '../../Shared/Field/Field';\r\nimport { useFormik, withFormik, Formik } from 'formik';\r\n\r\n\r\n\r\nconst Login = (props) => {\r\n\r\n  const [isLoading, setisLoading] = useState(false);\r\n  const history = useHistory();\r\n  let fields = [\r\n    { type: 'text', label: 'E-mail', name: \"email\", id: \"\", className: \"form-control\", placeholder: \"example : demo@demo.com\" },\r\n    { type: 'password', label: 'Password', name: \"password\", id: \"\", className: \"form-control\", placeholder: \"enter your password\" },\r\n  ]\r\n\r\n  // ================================================================================\r\n\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: '',\r\n      password: '',\r\n\r\n    },\r\n\r\n    validate: values => {\r\n      const errors = {};\r\n      Object.keys(values).map(v => {\r\n        if (!values[v]) {\r\n          errors[v] = 'required'\r\n        }\r\n\r\n      })\r\n\r\n\r\n      if (values.email) {\r\n        if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n          errors.email = 'Invalid email address';\r\n        }\r\n      }\r\n\r\n      if (values.password) {\r\n        if (values.password.length < 8) {\r\n          errors.password = 'should be at least 8 charcters';\r\n        }\r\n      }\r\n      return errors;\r\n    },\r\n\r\n    onSubmit: values => {\r\n      setisLoading(true);\r\n      authservices.login(values).then((res) => {\r\n        setisLoading(false);\r\n        localStorage.setItem(\"todoToken\", JSON.stringify(res.token));\r\n        props.setUserToken(res.token);\r\n        history.push(\"/todolist\");\r\n\r\n      });\r\n    },\r\n    handleSubmit: (values, { resetForm, setErrors, setStatus, setSubmitting, setisLoading, setUser, history }) => {\r\n      debugger\r\n    }\r\n  });\r\n\r\n  // ================================================================================\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <section className=\"login-section\">\r\n        <div className=\"container main-form-container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6 offset-md-3\">\r\n              <div className=\"form-contianer\">\r\n                {isLoading && <Loader />}\r\n                <h3 className=\"title\">login</h3>\r\n\r\n                <form className=\"form\"\r\n                  // onSubmit={onSubmitForm}\r\n                  onSubmit={formik.handleSubmit}\r\n                >\r\n\r\n                  {fields && fields.map((field, fieldIndex) => {\r\n                    return (\r\n                      <Field {...field}\r\n                        key={fieldIndex}\r\n                        // field.name (email , password)\r\n                        value={formik.values[field.name]}\r\n                        onChange={formik.handleChange}\r\n                        onBlur={formik.handleBlur}\r\n                        touched={formik.touched[field.name]}\r\n                        errors={formik.errors[field.name]}\r\n\r\n                      />\r\n                    )\r\n                  })}\r\n\r\n\r\n                  {/* <div className=\"form-group\">\r\n                    <label>E-mail</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"email\"\r\n                      id=\"\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"example : demo@demo.com\"\r\n                      value={user.email}\r\n                      onChange={onchangeInput}\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"form-group\">\r\n                    <label>Password</label>\r\n                    <input\r\n                      type=\"password\"\r\n                      name=\"password\"\r\n                      id=\"\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"example : demodemo\"\r\n                      value={user.password}\r\n                      onChange={onchangeInput}\r\n                    />\r\n                  </div> */}\r\n\r\n                  <Link to=\"/register\" className=\"reg-link\">\r\n                    register new account\r\n                  </Link>\r\n\r\n                  <button\r\n                    className=\"submit\"\r\n                    value=\"submit\"\r\n                    type=\"submit\"\r\n                    className=\"submit-btn\"\r\n                    disabled={!(formik.isValid && formik.dirty)}\r\n                  >\r\n                    Submit\r\n                  </button>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default (Login);\r\n","D:\\reactworkspace\\learning\\todolist\\src\\Components\\TodoList\\Todo\\Todo.jsx",["193","194","195"],"import React, { useState, useEffect } from \"react\";\r\nimport * as todoservice from \"../../../Services/TodosService\";\r\nimport './Todo.scss'\r\nimport { Link } from 'react-router-dom';\r\nconst Todo = ({ task, allTasks, setallTasks }) => {\r\n  let utoken = \"\";\r\n  const [taskIsLoadingCompleted, settaskIsLoadingCompleted] = useState(false);\r\n  const [taskIsDeleteing, settaskIsDeleteing] = useState(false);\r\n\r\n\r\n  // useEffect(() => {\r\n  //   settaskIsLoadingCompleted(false);\r\n  //   debugger\r\n  // }, [allTasks])\r\n\r\n\r\n  // =======================================================================\r\n  let toggleCompleted = (taskId, isCompleted) => {\r\n    utoken = JSON.parse(localStorage.getItem(\"todoToken\"));\r\n    settaskIsLoadingCompleted(true)\r\n\r\n    todoservice.toggleCompleted(utoken, taskId, isCompleted).then((res) => {\r\n      console.log(\"toggleCompleted\", res);\r\n      let wantedElement = allTasks.find((el) => el._id == taskId);\r\n      allTasks[allTasks.indexOf(wantedElement)].completed = !isCompleted;\r\n      let newAllTasks = [...allTasks];\r\n      setallTasks(newAllTasks);\r\n      settaskIsLoadingCompleted(false)\r\n    })\r\n\r\n  };\r\n\r\n  // =================================================\r\n\r\n  // settaskIsDeleteing(true);\r\n  let deleteTask = (taskId) => {\r\n    settaskIsDeleteing(true);\r\n\r\n    utoken = JSON.parse(localStorage.getItem(\"todoToken\"));\r\n    todoservice.deleteTask(utoken, taskId).then((res) => {\r\n      console.log(\"delete response\", res);\r\n      settaskIsDeleteing(false);\r\n\r\n      let wantedElement = allTasks.find((el) => el._id == taskId);\r\n      let elementIndex = allTasks.indexOf(wantedElement);\r\n      allTasks.splice(elementIndex, 1);\r\n      let newAllTasks = [...allTasks];\r\n\r\n      setallTasks(newAllTasks);\r\n\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"todo\">\r\n        <Link to={`/todolist/${task._id}`} className=\"d-block flex-110 \">\r\n          <li className={`todo-item d-block flex-110 ${task.completed && \"completed\"}`}>\r\n            {task.description}\r\n          </li>\r\n        </Link>\r\n        <button\r\n          className=\"complete-btn\"\r\n          onClick={() => toggleCompleted(task._id, task.completed)}\r\n          disabled={taskIsLoadingCompleted}\r\n        >\r\n          <i className=\"fas fa-check\"></i>\r\n        </button>\r\n        <button className=\"trash-btn\" onClick={() => deleteTask(task._id)} disabled={taskIsDeleteing}>\r\n          <i className=\"fas fa-trash\"></i>\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Todo;\r\n","D:\\reactworkspace\\learning\\todolist\\src\\Components\\TodoList\\TodoForm\\TodoForm.jsx",[],"D:\\reactworkspace\\learning\\todolist\\src\\Components\\ProtectedRoute.jsx",[],["196","197"],"D:\\reactworkspace\\learning\\todolist\\src\\Components\\IsAuthunticatedRoute.jsx",[],"D:\\reactworkspace\\learning\\todolist\\src\\App.jsx",["198","199","200"],"import \"./App.scss\";\nimport { useState, createContext, useEffect,Suspense, lazy } from \"react\";\n// components\nimport Home from \"./Components/Home/Home.jsx\";\nimport HeaderComponent from \"../src/Components/Shared/HeaderComponent/HeaderComponent\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Footer from \"./Components/Shared/Footer/Footer\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport ProtectedRoute from \"./Components/ProtectedRoute\";\nimport IsAuthunticatedRoute from \"./Components/IsAuthunticatedRoute\";\nimport * as authservice from \"./Services/AuthService\";\n\n\n// ===================pages\nconst Login = lazy(() => import('./Components/Auth/Login/Login'));\nconst Registeration = lazy(() => import('./Components/Auth/Registeration/Registeration'));\nconst TodoList = lazy(() => import('./Components/TodoList/TodoList'));\nconst TodoPage = lazy(() => import('./Components/TodoList/TodoPage/TodoPage'));\n\n\n\n\n\nexport let userTokenContext = createContext();\nfunction App() {\n  const [userToken, setUserToken] = useState(\"\");\n\n  let getTokenFromLocalStorage = () => {\n    if (authservice.checkAuthentication())\n      setUserToken(JSON.parse(localStorage.getItem(\"todoToken\")));\n  };\n\n  useEffect(() => {\n    getTokenFromLocalStorage();\n  }, []);\n\n  \n  return (\n    <div className=\"\">\n      <Router>\n\n        <Suspense fallback={<div>Loading...</div>}>\n\n\n          <HeaderComponent userToken={userToken} setUserToken={setUserToken} />\n\n          <Switch>\n            <Route exact path=\"/\" exact component={Home} />\n            <Route exact path=\"/login\" exact>\n              <userTokenContext.Provider value={userToken}>\n                <IsAuthunticatedRoute\n                  component={Login}\n                  userToken={userToken}\n                  setUserToken={setUserToken}\n                />\n              </userTokenContext.Provider>\n            </Route>\n\n            <Route exact path=\"/register\" exact component={Registeration} />\n\n            <ProtectedRoute\n              exact\n              path=\"/todolist\"\n              component={TodoList}\n              userToken={userToken}\n            ></ProtectedRoute>\n\n\n            <ProtectedRoute\n              exact\n              path=\"/todolist/:todoId\"\n              component={TodoPage}\n              userToken={userToken}\n            ></ProtectedRoute>\n          </Switch>\n\n          <Footer />\n\n        </Suspense>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","D:\\reactworkspace\\learning\\todolist\\src\\Components\\Auth\\Registeration\\Registeration.jsx",["201"],"import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Registeration.scss\";\r\nimport * as authservices from \"../../../Services/AuthService\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useFormik } from 'formik';\r\nimport Field from '../../Shared/Field/Field';\r\nimport Loader from '../../Shared/Loader/Loader';\r\nimport * as Yup from 'yup';\r\nfunction Registeration() {\r\n\r\n\r\n  const [isLoading, setisLoading] = useState(false);\r\n  const history = useHistory();\r\n\r\n\r\n\r\n  let fields = [\r\n    { type: 'text', label: 'Name', name: \"name\", id: \"\", className: \"form-control\", placeholder: \"your name :\" },\r\n    { type: 'email', label: 'E-mail', name: \"email\", id: \"\", className: \"form-control\", placeholder: \"example : demo@demo.com\" },\r\n    { type: 'password', label: 'password', name: \"password\", id: \"\", className: \"form-control\", placeholder: \"enter your password\" },\r\n    { type: 'text', label: 'Age', name: \"age\", id: \"\", className: \"form-control\", placeholder: \"enter your age :\" },\r\n  ]\r\n\r\n\r\n  // ================================================================================\r\n\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      name: '',\r\n      email: '',\r\n      password: '',\r\n      age: 0\r\n\r\n    },\r\n\r\n\r\n    validationSchema: Yup.object({\r\n      name: Yup.string().required('required from Yup').min(3, 'minimum length 3 '),\r\n      email: Yup.string().email('Invalid email format').required('required'),\r\n      password: Yup.string().min(8, \"Minimum 8 characters\").required(\"Required!\")\r\n        .matches(\r\n          /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/,\r\n          \"Must Contain 8 Characters, One Uppercase, One Lowercase, One Number and one special case Character\"\r\n        ),\r\n      age: Yup.number().required('age is required').positive('age must be greater than zero')\r\n\r\n    }),\r\n    onSubmit: (values, { resetForm }) => {\r\n      setisLoading(true);\r\n      authservices.registeration(values).then((res) => {\r\n        resetForm();\r\n        console.log(res);\r\n        history.push(\"/login\");\r\n      });\r\n    },\r\n    handleSubmit: (values, { resetForm, setErrors, setStatus, setSubmitting, setisLoading, setUser, history }) => {\r\n      debugger\r\n    }\r\n  });\r\n\r\n  return (\r\n    <section className=\"login-section\">\r\n      <div className=\"container main-form-container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6 offset-md-3\">\r\n            <div className=\"form-contianer\">\r\n              {isLoading && <Loader />}\r\n              <h3 className=\"title\">registeration</h3>\r\n              <form action=\"\" className=\"form\" onSubmit={formik.handleSubmit}>\r\n\r\n\r\n\r\n                {fields && fields.map((field, fieldIndex) => {\r\n                  return (\r\n                    <Field {...field}\r\n                      key={fieldIndex}\r\n                      // field name (email , password)\r\n                      value={formik.values[field.name]}\r\n                      onChange={formik.handleChange}\r\n                      onBlur={formik.handleBlur}\r\n                      touched={formik.touched[field.name]}\r\n                      errors={formik.errors[field.name]}\r\n\r\n                    />\r\n                  )\r\n                })}\r\n\r\n                <Link to=\"/login\" className=\"reg-link\">\r\n                  I already have account\r\n                </Link>\r\n\r\n                <button\r\n                  className=\"submit\"\r\n                  value=\"submit\"\r\n                  type=\"submit\"\r\n                  className=\"submit-btn\"\r\n                  disabled={!(formik.isValid && formik.dirty)}\r\n                >\r\n                  Submit\r\n                  </button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Registeration;\r\n","D:\\reactworkspace\\learning\\todolist\\src\\Services\\TodosService.js",[],"D:\\reactworkspace\\learning\\todolist\\src\\Components\\TodoList\\TodoPage\\TodoPage.jsx",["202"],"import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport * as taskServices from '../../../Services/TodosService';\r\nfunction TodoPage(props) {\r\n    const [curentTask, setCurrentTask] = useState({});\r\n    const history = useHistory();\r\n    let utoken = \"\"\r\n    // console.log(+props.computedMatch.params.todoId);\r\n\r\n    let getTask = () => {\r\n        let CurrentTaskIId = props.computedMatch.params.todoId;\r\n        utoken = JSON.parse(localStorage.getItem(\"todoToken\"));\r\n        taskServices.getSingleTask(utoken, CurrentTaskIId).then((res) => {\r\n            console.log(res.data);\r\n            if (res.data.success) {\r\n                setCurrentTask(res.data.data);\r\n            } else {\r\n\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    let updateTask = () => {\r\n        let CurrentTaskIId = props.computedMatch.params.todoId;\r\n        utoken = JSON.parse(localStorage.getItem(\"todoToken\"));\r\n\r\n        curentTask.description !== \"\" && taskServices.updateTask(utoken, CurrentTaskIId, curentTask.description).then(res => {\r\n            console.log('res', res);\r\n        })\r\n    }\r\n\r\n\r\n    let toggleComplete = () => {\r\n        let CurrentTaskIId = props.computedMatch.params.todoId;\r\n        utoken = JSON.parse(localStorage.getItem(\"todoToken\"));\r\n\r\n\r\n        curentTask.description !== \"\" && taskServices.toggleCompletedFull(utoken, CurrentTaskIId, curentTask.completed, curentTask.description).then(res => {\r\n            // console.log('res', res);\r\n\r\n            if (res.data.success) {\r\n                setCurrentTask(res.data.data);\r\n            } else {\r\n\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n\r\n    let deleteCuurentTask = () => {\r\n        let CurrentTaskIId = props.computedMatch.params.todoId;\r\n        utoken = JSON.parse(localStorage.getItem(\"todoToken\"));\r\n        taskServices.deleteTask(utoken, CurrentTaskIId).then(res => {\r\n            if (res.data.success) {\r\n                setCurrentTask({});\r\n                history.goBack();\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        getTask();\r\n    }, [])\r\n\r\n    let onChangeHandler = (e) => {\r\n        setCurrentTask({ ...curentTask, description: e.target.value })\r\n    }\r\n    return (\r\n        <section className=\"home\">\r\n            <div className=\"w-100\">\r\n\r\n\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-6 offset-lg-3\">\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\" name=\"\" className={`form-control ${curentTask.completed && 'completed'}`}\r\n                                    placeholder=\"Task\"\r\n                                    value={curentTask.description || ''} onChange={onChangeHandler} />\r\n                                <button name=\"\" className=\"btn btn-primary mx-1 mt-2\" onClick={updateTask}>\r\n                                    Submit\r\n                                </button>\r\n\r\n                                <button name=\"\" className=\"btn btn-success mx-1 mt-2\" onClick={() => toggleComplete(curentTask.completed)}>\r\n                                    {curentTask.completed ? 'not Finshed' : 'finished !'}\r\n                                </button>\r\n\r\n                                <button name=\"\" className=\"btn btn-danger mx-1 mt-2\" onClick={deleteCuurentTask}>\r\n                                    delete\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </section>\r\n\r\n    )\r\n}\r\n\r\nexport default TodoPage\r\n\r\n",["203","204"],"D:\\reactworkspace\\learning\\todolist\\src\\Components\\Shared\\HeaderComponent\\HeaderComponent.jsx",["205","206"],"import React from \"react\";\r\nimport \"./HeaderComponent.scss\";\r\nimport { Navbar, NavDropdown, Nav } from \"react-bootstrap\";\r\nimport * as authservice from \"../../../Services/AuthService\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\n\r\nfunction HeaderComponent({ userToken, setUserToken }) {\r\n  const history = useHistory();\r\n\r\n  const onLogoutHandler = (e) => {\r\n    e.preventDefault();\r\n    authservice.logout(userToken).then((res) => {\r\n      console.log(\"logout res\", res);\r\n      localStorage.removeItem(\"todoToken\");\r\n      setUserToken('');\r\n      history.push(\"/login\");\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      <Navbar expand=\"lg\">\r\n        <div className=\"container\">\r\n          <Navbar.Brand className=\"navbar-brand\" href=\"#home\">\r\n            TODO\r\n          </Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"nav-ul-margin\">\r\n              <ul className=\"navbar-nav\">\r\n                <li className=\"nav-item\">\r\n                  <Link to=\"/\" className=\"nav-link\">\r\n                    Home\r\n                  </Link>\r\n                </li>\r\n\r\n                {!authservice.checkAuthentication() ||\r\n                  (!userToken && (\r\n                    <li className=\"nav-item\">\r\n                      <Link to=\"/login\" className=\"nav-link\">\r\n                        Login\r\n                      </Link>\r\n                    </li>\r\n                  ))}\r\n                {!authservice.checkAuthentication() ||\r\n                  (!userToken && (\r\n                    <li className=\"nav-item\">\r\n                      <Link to=\"/register\" className=\"nav-link\">\r\n                        Registeration\r\n                      </Link>\r\n                    </li>\r\n                  ))}\r\n                {authservice.checkAuthentication() && userToken && (\r\n                  <li className=\"nav-item\">\r\n                    <Link to=\"/todolist\" className=\"nav-link\">\r\n                      todolist\r\n                    </Link>\r\n                  </li>\r\n                )}\r\n                {authservice.checkAuthentication() && userToken && (\r\n                  <li className=\"nav-item\">\r\n                    <a className=\"nav-link\" onClick={onLogoutHandler}>\r\n                      Logout\r\n                    </a>\r\n                  </li>\r\n                )}\r\n              </ul>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </div>\r\n      </Navbar>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default HeaderComponent;\r\n",["207","208"],"D:\\reactworkspace\\learning\\todolist\\src\\Components\\Shared\\Field\\Field.jsx",[],"D:\\reactworkspace\\learning\\todolist\\src\\reportWebVitals.js",[],"D:\\reactworkspace\\learning\\todolist\\src\\Services\\AuthService.js",[],"D:\\reactworkspace\\learning\\todolist\\src\\Components\\Home\\Home.jsx",[],"D:\\reactworkspace\\learning\\todolist\\src\\Components\\Shared\\Pagination\\Pagination.jsx",["209","210","211","212","213","214"],"import React from 'react';\r\nimport { IconButton, Select, Typography } from \"@material-ui/core\";\r\nimport './Pagination.scss';\r\n\r\nfunction Pagination({ className, pageSize = 10, page = 1, count = 0, onChange, ...props }) {\r\n    const totalPagesState = React.useState(1);\r\n    const pageRangeState = React.useState([0, 0]);\r\n\r\n    React.useEffect(() => {\r\n        if (pageSize === 0 || !pageSize) {\r\n            if (onChange) onChange(1, 10);\r\n            return;\r\n        }\r\n        if (page === 0 || !page) {\r\n            if (onChange) onChange(2, 1);\r\n            return;\r\n        }\r\n        if (count < pageSize * (page - 1)) {\r\n            if (onChange) onChange(2, 1);\r\n            return;\r\n        }\r\n        const totalPages = Math.ceil(count / pageSize);\r\n        totalPagesState[1](totalPages);\r\n        const startNo = Math.min(count, 1 + pageSize * (page - 1));\r\n        const endNo = Math.min(count, pageSize * page);\r\n        if (startNo === NaN) startNo = 0;\r\n        if (endNo === NaN) endNo = 0;\r\n        pageRangeState[1]([startNo, endNo]);\r\n    }, [page, pageSize, count]);\r\n\r\n    return (\r\n        <div className={`row ml-0 mr-0 pagination ${className}`} {...props}>\r\n            <div className=\"align-center-vh mr-2\">\r\n                <Typography noWrap className=\"c-blue\">\r\n                    Rows per page:\r\n          </Typography>\r\n            </div>\r\n            <div className=\"align-center-vh mr-5\">\r\n                <Select\r\n                    native\r\n                    value={pageSize ?? 10}\r\n                    onChange={(e) => {\r\n                        if (onChange) onChange(1, parseInt(e.target.value) ?? 10);\r\n                    }}\r\n                >\r\n                    {[2, 5, 10, 15, 20, 25, 30].map((o, oi) => (\r\n                        <option value={o} key={`Page-Option-${o}-${oi}`}>\r\n                            {o}\r\n                        </option>\r\n                    ))}\r\n                </Select>\r\n            </div>\r\n\r\n            <div className=\"align-center-vh\">\r\n\r\n                <Typography noWrap className='mr-3 c-blue'>\r\n                    {`${pageRangeState[0][0]} - ${pageRangeState[0][1]} of ${count}`}\r\n                </Typography>\r\n\r\n                <div\r\n                    className=\"left-arrow\"\r\n                    onClick={(e) => {\r\n                        if (onChange) onChange(2, page - 1);\r\n                    }}\r\n                    disabled={pageRangeState[0][0] === 0 || pageRangeState[0][0] === 1}\r\n                >\r\n                    <i className=\"fas fa-chevron-left c-blue\"></i>\r\n                </div>\r\n\r\n\r\n                <div\r\n                    className=\"right-arrow\"\r\n                    onClick={(e) => {\r\n                        if (onChange) onChange(2, page + 1);\r\n                    }}\r\n                    disabled={pageRangeState[0][1] >= count}\r\n                >\r\n                    <i className=\"fas fa-chevron-right c-blue\"></i>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Pagination\r\n\r\n",{"ruleId":"215","replacedBy":"216"},{"ruleId":"217","replacedBy":"218"},{"ruleId":"219","severity":1,"message":"220","line":34,"column":33,"nodeType":"221","endLine":34,"endColumn":38},{"ruleId":"219","severity":1,"message":"220","line":35,"column":38,"nodeType":"221","endLine":35,"endColumn":43},{"ruleId":"219","severity":1,"message":"220","line":45,"column":41,"nodeType":"221","endLine":45,"endColumn":46},{"ruleId":"222","severity":1,"message":"223","line":3,"column":18,"nodeType":"224","messageId":"225","endLine":3,"endColumn":29},{"ruleId":"226","severity":1,"message":"227","line":60,"column":21,"nodeType":"228","endLine":60,"endColumn":71},{"ruleId":"215","replacedBy":"229"},{"ruleId":"217","replacedBy":"230"},{"ruleId":"219","severity":1,"message":"220","line":89,"column":21,"nodeType":"221","endLine":89,"endColumn":43},{"ruleId":"219","severity":1,"message":"220","line":104,"column":19,"nodeType":"221","endLine":104,"endColumn":41},{"ruleId":"222","severity":1,"message":"231","line":15,"column":10,"nodeType":"224","messageId":"225","endLine":15,"endColumn":21},{"ruleId":"232","severity":1,"message":"233","line":46,"column":6,"nodeType":"234","endLine":46,"endColumn":8,"suggestions":"235"},{"ruleId":"236","severity":1,"message":"237","line":11,"column":56,"nodeType":"238","messageId":"239","endLine":11,"endColumn":58},{"ruleId":"236","severity":1,"message":"237","line":27,"column":56,"nodeType":"238","messageId":"239","endLine":27,"endColumn":58},{"ruleId":"215","replacedBy":"240"},{"ruleId":"217","replacedBy":"241"},{"ruleId":"242","severity":2,"message":"243","line":16,"column":6,"nodeType":"244","endLine":16,"endColumn":14},{"ruleId":"215","replacedBy":"245"},{"ruleId":"217","replacedBy":"246"},{"ruleId":"222","severity":1,"message":"247","line":23,"column":10,"nodeType":"224","messageId":"225","endLine":23,"endColumn":22},{"ruleId":"222","severity":1,"message":"248","line":23,"column":24,"nodeType":"224","messageId":"225","endLine":23,"endColumn":39},{"ruleId":"232","severity":1,"message":"249","line":85,"column":6,"nodeType":"234","endLine":85,"endColumn":8,"suggestions":"250"},{"ruleId":"232","severity":1,"message":"251","line":90,"column":6,"nodeType":"234","endLine":90,"endColumn":31,"suggestions":"252"},{"ruleId":"232","severity":1,"message":"253","line":106,"column":6,"nodeType":"234","endLine":106,"endColumn":40,"suggestions":"254"},{"ruleId":"222","severity":1,"message":"255","line":1,"column":27,"nodeType":"224","messageId":"225","endLine":1,"endColumn":37},{"ruleId":"222","severity":1,"message":"256","line":5,"column":10,"nodeType":"224","messageId":"225","endLine":5,"endColumn":26},{"ruleId":"222","severity":1,"message":"257","line":9,"column":21,"nodeType":"224","messageId":"225","endLine":9,"endColumn":31},{"ruleId":"222","severity":1,"message":"258","line":9,"column":33,"nodeType":"224","messageId":"225","endLine":9,"endColumn":39},{"ruleId":"259","severity":1,"message":"260","line":35,"column":33,"nodeType":"261","messageId":"262","endLine":35,"endColumn":35},{"ruleId":"219","severity":1,"message":"220","line":141,"column":21,"nodeType":"221","endLine":141,"endColumn":43},{"ruleId":"222","severity":1,"message":"263","line":1,"column":27,"nodeType":"224","messageId":"225","endLine":1,"endColumn":36},{"ruleId":"236","severity":1,"message":"237","line":24,"column":56,"nodeType":"238","messageId":"239","endLine":24,"endColumn":58},{"ruleId":"236","severity":1,"message":"237","line":44,"column":56,"nodeType":"238","messageId":"239","endLine":44,"endColumn":58},{"ruleId":"215","replacedBy":"264"},{"ruleId":"217","replacedBy":"265"},{"ruleId":"219","severity":1,"message":"220","line":48,"column":35,"nodeType":"221","endLine":48,"endColumn":40},{"ruleId":"219","severity":1,"message":"220","line":49,"column":40,"nodeType":"221","endLine":49,"endColumn":45},{"ruleId":"219","severity":1,"message":"220","line":59,"column":43,"nodeType":"221","endLine":59,"endColumn":48},{"ruleId":"219","severity":1,"message":"220","line":98,"column":19,"nodeType":"221","endLine":98,"endColumn":41},{"ruleId":"232","severity":1,"message":"266","line":65,"column":8,"nodeType":"234","endLine":65,"endColumn":10,"suggestions":"267"},{"ruleId":"215","replacedBy":"268"},{"ruleId":"217","replacedBy":"269"},{"ruleId":"222","severity":1,"message":"223","line":3,"column":18,"nodeType":"224","messageId":"225","endLine":3,"endColumn":29},{"ruleId":"226","severity":1,"message":"227","line":61,"column":21,"nodeType":"228","endLine":61,"endColumn":71},{"ruleId":"215","replacedBy":"270"},{"ruleId":"217","replacedBy":"271"},{"ruleId":"222","severity":1,"message":"272","line":2,"column":10,"nodeType":"224","messageId":"225","endLine":2,"endColumn":20},{"ruleId":"273","severity":1,"message":"274","line":26,"column":13,"nodeType":"238","messageId":"275","endLine":26,"endColumn":28},{"ruleId":"276","severity":1,"message":"277","line":26,"column":30,"nodeType":"224","messageId":"278","endLine":26,"endColumn":37},{"ruleId":"273","severity":1,"message":"274","line":27,"column":13,"nodeType":"238","messageId":"275","endLine":27,"endColumn":26},{"ruleId":"276","severity":1,"message":"279","line":27,"column":28,"nodeType":"224","messageId":"278","endLine":27,"endColumn":33},{"ruleId":"232","severity":1,"message":"280","line":29,"column":8,"nodeType":"234","endLine":29,"endColumn":31,"suggestions":"281"},"no-native-reassign",["282"],"no-negated-in-lhs",["283"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-unused-vars","'NavDropdown' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["282"],["283"],"'listLoading' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getAllTasks'. Either include it or remove the dependency array.","ArrayExpression",["284"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["282"],["283"],"react/jsx-no-undef","'Redirect' is not defined.","JSXIdentifier",["282"],["283"],"'selectedPage' is assigned a value but never used.","'setSelectedPage' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getAllTasks' and 'getLoggedInUser'. Either include them or remove the dependency array.",["285"],"React Hook useEffect has a missing dependency: 'filterBy'. Either include it or remove the dependency array.",["286"],"React Hook useEffect has a missing dependency: 'paginationFn'. Either include it or remove the dependency array.",["287"],"'useContext' is defined but never used.","'userTokenContext' is defined but never used.","'withFormik' is defined but never used.","'Formik' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'useEffect' is defined but never used.",["282"],["283"],"React Hook useEffect has a missing dependency: 'getTask'. Either include it or remove the dependency array.",["288"],["282"],["283"],["282"],["283"],"'IconButton' is defined but never used.","use-isnan","Use the isNaN function to compare with NaN.","comparisonWithNaN","no-const-assign","'startNo' is constant.","const","'endNo' is constant.","React Hook React.useEffect has missing dependencies: 'onChange', 'pageRangeState', and 'totalPagesState'. Either include them or remove the dependency array. If 'onChange' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["289"],"no-global-assign","no-unsafe-negation",{"desc":"290","fix":"291"},{"desc":"292","fix":"293"},{"desc":"294","fix":"295"},{"desc":"296","fix":"297"},{"desc":"298","fix":"299"},{"desc":"300","fix":"301"},"Update the dependencies array to be: [getAllTasks]",{"range":"302","text":"303"},"Update the dependencies array to be: [getAllTasks, getLoggedInUser]",{"range":"304","text":"305"},"Update the dependencies array to be: [allTasks, filterBy, filterByValue]",{"range":"306","text":"307"},"Update the dependencies array to be: [filteredallTasks, page, pageSize, paginationFn]",{"range":"308","text":"309"},"Update the dependencies array to be: [getTask]",{"range":"310","text":"311"},"Update the dependencies array to be: [page, pageSize, count, totalPagesState, pageRangeState, onChange]",{"range":"312","text":"313"},[1221,1223],"[getAllTasks]",[2301,2303],"[getAllTasks, getLoggedInUser]",[2354,2379],"[allTasks, filterBy, filterByValue]",[2712,2746],"[filteredallTasks, page, pageSize, paginationFn]",[2084,2086],"[getTask]",[1064,1087],"[page, pageSize, count, totalPagesState, pageRangeState, onChange]"]