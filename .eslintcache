[{"F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\index.js":"1","F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\reportWebVitals.js":"2","F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\Components\\Home\\Home.jsx":"3","F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\App.jsx":"4","F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\Components\\Shared\\HeaderComponent\\HeaderComponent.jsx":"5","F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\Components\\Shared\\Footer\\Footer.jsx":"6","F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\Components\\Auth\\Login\\Login.jsx":"7","F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\Components\\Auth\\Registeration\\Registeration.jsx":"8","F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\Components\\TodoList\\TodoList.jsx":"9","F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\Components\\TodoList\\TodoForm\\TodoForm.jsx":"10","F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\Components\\TodoList\\Todo\\Todo.jsx":"11","F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\Services\\AuthService.js":"12","F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\config.js":"13","F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\Services\\TodosService.js":"14","F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\Components\\ProtectedRoute.jsx":"15","F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\Components\\isAuthunticatedRoute.jsx":"16","F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\Components\\IsAuthunticatedRoute.jsx":"17","F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\Components\\Shared\\Loader\\Loader.jsx":"18","D:\\reactworkspace\\learning\\todolist\\src\\index.js":"19","D:\\reactworkspace\\learning\\todolist\\src\\Components\\TodoList\\TodoList.jsx":"20","D:\\reactworkspace\\learning\\todolist\\src\\Components\\Auth\\Login\\Login.jsx":"21","D:\\reactworkspace\\learning\\todolist\\src\\Components\\TodoList\\Todo\\Todo.jsx":"22","D:\\reactworkspace\\learning\\todolist\\src\\Components\\TodoList\\TodoForm\\TodoForm.jsx":"23","D:\\reactworkspace\\learning\\todolist\\src\\Components\\ProtectedRoute.jsx":"24","D:\\reactworkspace\\learning\\todolist\\src\\Components\\IsAuthunticatedRoute.jsx":"25","D:\\reactworkspace\\learning\\todolist\\src\\App.jsx":"26","D:\\reactworkspace\\learning\\todolist\\src\\Components\\Auth\\Registeration\\Registeration.jsx":"27","D:\\reactworkspace\\learning\\todolist\\src\\Services\\TodosService.js":"28","D:\\reactworkspace\\learning\\todolist\\src\\Components\\TodoList\\TodoPage\\TodoPage.jsx":"29","D:\\reactworkspace\\learning\\todolist\\src\\Components\\Shared\\HeaderComponent\\HeaderComponent.jsx":"30","D:\\reactworkspace\\learning\\todolist\\src\\Components\\Shared\\Field\\Field.jsx":"31","D:\\reactworkspace\\learning\\todolist\\src\\reportWebVitals.js":"32","D:\\reactworkspace\\learning\\todolist\\src\\Services\\AuthService.js":"33","D:\\reactworkspace\\learning\\todolist\\src\\Components\\Home\\Home.jsx":"34","D:\\reactworkspace\\learning\\todolist\\src\\Components\\Shared\\Pagination\\Pagination.jsx":"35","D:\\reactworkspace\\learning\\todolist\\src\\Components\\Shared\\Footer\\Footer.jsx":"36","D:\\reactworkspace\\learning\\todolist\\src\\Components\\Shared\\Loader\\Loader.jsx":"37","D:\\reactworkspace\\learning\\todolist\\src\\Redux\\store.js":"38","D:\\reactworkspace\\learning\\todolist\\src\\Redux\\auth\\authReducer.js":"39","D:\\reactworkspace\\learning\\todolist\\src\\Redux\\auth\\authConstants.js":"40","D:\\reactworkspace\\learning\\todolist\\src\\Redux\\auth\\authActions.js":"41","D:\\reactworkspace\\learning\\todolist\\src\\config.js":"42","D:\\reactworkspace\\learning\\todolist\\src\\Redux\\Todos\\todosConstants.js":"43","D:\\reactworkspace\\learning\\todolist\\src\\Redux\\Todos\\todosAction.js":"44","D:\\reactworkspace\\learning\\todolist\\src\\Redux\\Todos\\todosReducer.js":"45"},{"size":504,"mtime":1609590775573,"results":"46","hashOfConfig":"47"},{"size":362,"mtime":1607939826535,"results":"48","hashOfConfig":"47"},{"size":361,"mtime":1609560749529,"results":"49","hashOfConfig":"47"},{"size":1980,"mtime":1609761603104,"results":"50","hashOfConfig":"47"},{"size":2503,"mtime":1609787353066,"results":"51","hashOfConfig":"47"},{"size":252,"mtime":1609596793717,"results":"52","hashOfConfig":"47"},{"size":3083,"mtime":1609839916120,"results":"53","hashOfConfig":"47"},{"size":3384,"mtime":1609686435838,"results":"54","hashOfConfig":"47"},{"size":2114,"mtime":1609840408662,"results":"55","hashOfConfig":"47"},{"size":1289,"mtime":1609787462274,"results":"56","hashOfConfig":"47"},{"size":1770,"mtime":1609720646643,"results":"57","hashOfConfig":"47"},{"size":2493,"mtime":1609761367012,"results":"58","hashOfConfig":"47"},{"size":397,"mtime":1609638248382,"results":"59","hashOfConfig":"47"},{"size":1892,"mtime":1609725647630,"results":"60","hashOfConfig":"47"},{"size":601,"mtime":1609786907619,"results":"61","hashOfConfig":"47"},{"size":506,"mtime":1609754426515,"results":"62","hashOfConfig":"47"},{"size":547,"mtime":1609757960801,"results":"63","hashOfConfig":"47"},{"size":311,"mtime":1609840205224,"results":"64","hashOfConfig":"47"},{"size":504,"mtime":1638379246460,"results":"65","hashOfConfig":"66"},{"size":5137,"mtime":1638831413125,"results":"67","hashOfConfig":"66"},{"size":5501,"mtime":1638621798252,"results":"68","hashOfConfig":"66"},{"size":2502,"mtime":1610140199350,"results":"69","hashOfConfig":"66"},{"size":1476,"mtime":1638763036081,"results":"70","hashOfConfig":"66"},{"size":505,"mtime":1638715741256,"results":"71","hashOfConfig":"66"},{"size":547,"mtime":1609757960801,"results":"72","hashOfConfig":"66"},{"size":3236,"mtime":1638715762764,"results":"73","hashOfConfig":"66"},{"size":3836,"mtime":1610373279885,"results":"74","hashOfConfig":"66"},{"size":3284,"mtime":1638756518029,"results":"75","hashOfConfig":"66"},{"size":3673,"mtime":1610126541000,"results":"76","hashOfConfig":"66"},{"size":2811,"mtime":1638715851000,"results":"77","hashOfConfig":"66"},{"size":765,"mtime":1610366389268,"results":"78","hashOfConfig":"66"},{"size":362,"mtime":1607939826535,"results":"79","hashOfConfig":"66"},{"size":2281,"mtime":1638620595566,"results":"80","hashOfConfig":"66"},{"size":648,"mtime":1610585918719,"results":"81","hashOfConfig":"66"},{"size":3044,"mtime":1610447399032,"results":"82","hashOfConfig":"66"},{"size":252,"mtime":1609596793717,"results":"83","hashOfConfig":"66"},{"size":311,"mtime":1609840205224,"results":"84","hashOfConfig":"66"},{"size":938,"mtime":1638798515012,"results":"85","hashOfConfig":"66"},{"size":1712,"mtime":1638622319600,"results":"86","hashOfConfig":"66"},{"size":264,"mtime":1638620057379,"results":"87","hashOfConfig":"66"},{"size":2586,"mtime":1638714989429,"results":"88","hashOfConfig":"66"},{"size":397,"mtime":1609638248382,"results":"89","hashOfConfig":"66"},{"size":266,"mtime":1638764440140,"results":"90","hashOfConfig":"66"},{"size":2255,"mtime":1638831104013,"results":"91","hashOfConfig":"66"},{"size":1627,"mtime":1638831599679,"results":"92","hashOfConfig":"66"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},"fyjkkl",{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},"m7q2or",{"filePath":"139","messages":"140","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"147"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"158"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"138"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"167"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"198","messages":"199","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"158"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\index.js",[],["209","210"],"F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\reportWebVitals.js",[],"F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\Components\\Home\\Home.jsx",[],"F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\App.jsx",["211","212","213"],"F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\Components\\Shared\\HeaderComponent\\HeaderComponent.jsx",["214","215"],"F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\Components\\Shared\\Footer\\Footer.jsx",[],["216","217"],"F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\Components\\Auth\\Login\\Login.jsx",["218"],"import React, { useState, useContext } from \"react\";\r\nimport \"./Login.scss\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as authservices from \"../../../Services/AuthService\";\r\nimport { userTokenContext } from \"../../../App\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Loader from \"../../Shared/Loader/Loader\";\r\n\r\nconst Login = ({ userToken, setUserToken }) => {\r\n  let newUser = useContext(userTokenContext);\r\n  const [user, setUser] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  const [isLoading, setisLoading] = useState(false);\r\n  const history = useHistory();\r\n\r\n  let onchangeInput = (e) => {\r\n    setUser({\r\n      ...user,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n\r\n    console.log(newUser);\r\n    // console.log(\"userToken\", userToken);\r\n  };\r\n\r\n  let onSubmitForm = (e) => {\r\n    e.preventDefault();\r\n    setisLoading(true);\r\n    authservices.login(user).then((res) => {\r\n      setisLoading(false);\r\n      localStorage.setItem(\"todoToken\", JSON.stringify(res.token));\r\n      setUserToken(res.token);\r\n\r\n      setUser({\r\n        email: \"\",\r\n        password: \"\",\r\n      });\r\n      history.push(\"/todolist\");\r\n\r\n      // console.log(res);\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      <section className=\"login-section\">\r\n        <div className=\"container main-form-container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6 offset-md-3\">\r\n              <div className=\"form-contianer\">\r\n                {isLoading && <Loader />}\r\n                <h3 className=\"title\">login</h3>\r\n\r\n                <form className=\"form\" onSubmit={onSubmitForm}>\r\n                  <div className=\"form-group\">\r\n                    <label>E-mail</label>\r\n\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"email\"\r\n                      id=\"\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"example : demo@demo.com\"\r\n                      value={user.email}\r\n                      onChange={onchangeInput}\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <label>Password</label>\r\n                    <input\r\n                      type=\"password\"\r\n                      name=\"password\"\r\n                      id=\"\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"example : demodemo\"\r\n                      value={user.password}\r\n                      onChange={onchangeInput}\r\n                    />\r\n                  </div>\r\n\r\n                  <Link to=\"/register\" className=\"reg-link\">\r\n                    register new account\r\n                  </Link>\r\n\r\n                  <button\r\n                    className=\"submit\"\r\n                    value=\"submit\"\r\n                    className=\"submit-btn\"\r\n                  >\r\n                    Submit\r\n                  </button>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\Components\\Auth\\Registeration\\Registeration.jsx",["219"],"import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Registeration.scss\";\r\nimport * as authservices from \"../../../Services/AuthService\";\r\nimport { useHistory } from \"react-router-dom\";\r\nfunction Registeration() {\r\n  const [user, setUser] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    age: 0,\r\n  });\r\n  const history = useHistory();\r\n\r\n  let inputOnChange = (e) => {\r\n    setUser({\r\n      ...user,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  let onSubmit = (e) => {\r\n    e.preventDefault();\r\n    authservices.registeration(user).then((res) => {\r\n      setUser({\r\n        name: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        age: 0,\r\n      });\r\n      console.log(res);\r\n      history.push(\"/login\");\r\n    });\r\n  };\r\n  return (\r\n    <section className=\"login-section\">\r\n      <div className=\"container main-form-container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6 offset-md-3\">\r\n            <div className=\"form-contianer\">\r\n              <h3 className=\"title\">registeration</h3>\r\n              <form action=\"\" className=\"form\" onSubmit={onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <label>Name</label>\r\n\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    id=\"\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"\"\r\n                    value={user.name}\r\n                    onChange={inputOnChange}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label>E-mail</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"email\"\r\n                    id=\"\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"\"\r\n                    value={user.email}\r\n                    onChange={inputOnChange}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label>Password</label>\r\n                  <input\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    id=\"\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"\"\r\n                    value={user.password}\r\n                    onChange={inputOnChange}\r\n                  />\r\n                </div>\r\n\r\n                {/* <!-- age --> */}\r\n                <div className=\"form-group\">\r\n                  <label>Age</label>\r\n                  <input\r\n                    type=\"number\"\r\n                    name=\"age\"\r\n                    id=\"\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"\"\r\n                    value={user.age}\r\n                    onChange={inputOnChange}\r\n                  />\r\n                </div>\r\n\r\n                <Link to=\"/login\" className=\"reg-link\">\r\n                  I already have account\r\n                </Link>\r\n\r\n                <button\r\n                  className=\"submit\"\r\n                  value=\"submit\"\r\n                  className=\"submit-btn\"\r\n                >\r\n                  Submit\r\n                </button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Registeration;\r\n","F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\Components\\TodoList\\TodoList.jsx",["220","221"],"import React, { useEffect, useState } from \"react\";\r\nimport \"./TodoList.scss\";\r\nimport TodoForm from \"./TodoForm/TodoForm\";\r\nimport Todo from \"./Todo/Todo\";\r\nimport * as todoservice from \"../../Services/TodosService\";\r\nimport Loader from \"../Shared/Loader/Loader\";\r\n\r\nconst TodoList = () => {\r\n  let utoken = \"\";\r\n  let [toAddTask, settoAddTask] = useState({\r\n    description: \"\",\r\n  });\r\n\r\n  let [allTasks, setallTasks] = useState([]);\r\n  const [listLoading, setlistLoading] = useState(false);\r\n\r\n  let getAllTasks = () => {\r\n    setlistLoading(true);\r\n    utoken = JSON.parse(localStorage.getItem(\"todoToken\"));\r\n    todoservice.getAllTasks(utoken).then((res) => {\r\n      setallTasks(res.data.data);\r\n      setlistLoading(false);\r\n    });\r\n  };\r\n\r\n  let addTask = () => {\r\n    utoken = JSON.parse(localStorage.getItem(\"todoToken\"));\r\n    todoservice.addTask(utoken, toAddTask).then((res) => {\r\n      if (res.data.success) {\r\n        setallTasks([...allTasks, res.data.data]);\r\n        settoAddTask({\r\n          description: \"\",\r\n        });\r\n      }\r\n      console.log(res);\r\n    });\r\n  };\r\n\r\n  let onSubmitForm = (e) => {\r\n    e.preventDefault();\r\n    addTask();\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAllTasks();\r\n  }, []);\r\n\r\n  return (\r\n    <section className=\"todo-home-section\">\r\n      <TodoForm\r\n        toAddTask={toAddTask}\r\n        settoAddTask={settoAddTask}\r\n        onSubmitForm={onSubmitForm}\r\n      />\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6 offset-md-3\">\r\n            <ul className=\"todo-list\">\r\n              {<Loader />}\r\n              {allTasks &&\r\n                allTasks.map((task) => {\r\n                  return (\r\n                    <Todo\r\n                      key={task._id}\r\n                      task={task}\r\n                      allTasks={allTasks}\r\n                      setallTasks={setallTasks}\r\n                    />\r\n                  );\r\n                })}\r\n\r\n              {/* <Todo /> */}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\Components\\TodoList\\TodoForm\\TodoForm.jsx",[],"F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\Components\\TodoList\\Todo\\Todo.jsx",["222","223"],"import React from \"react\";\r\nimport * as todoservice from \"../../../Services/TodosService\";\r\n\r\nconst Todo = ({ task, allTasks, setallTasks }) => {\r\n  let utoken = \"\";\r\n  let toggleCompleted = (taskId, isCompleted) => {\r\n    utoken = JSON.parse(localStorage.getItem(\"todoToken\"));\r\n    todoservice.toggleCompleted(utoken, taskId, isCompleted).then((res) => {\r\n      console.log(\"toggleCompleted\", res);\r\n\r\n      let wantedElement = allTasks.find((el) => el._id == taskId);\r\n      let elementIndex = allTasks.indexOf(wantedElement);\r\n      allTasks[elementIndex].completed = !isCompleted;\r\n      debugger;\r\n      let newAllTasks = [...allTasks];\r\n\r\n      setallTasks(newAllTasks);\r\n    });\r\n  };\r\n\r\n  // =================================================\r\n  let deleteTask = (taskId) => {\r\n    utoken = JSON.parse(localStorage.getItem(\"todoToken\"));\r\n    todoservice.deleteTask(utoken, taskId).then((res) => {\r\n      console.log(\"delete response\", res);\r\n\r\n      let wantedElement = allTasks.find((el) => el._id == taskId);\r\n      let elementIndex = allTasks.indexOf(wantedElement);\r\n      allTasks.splice(elementIndex, 1);\r\n      let newAllTasks = [...allTasks];\r\n\r\n      setallTasks(newAllTasks);\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"todo\">\r\n        <li className={`todo-item ${task.completed && \"completed\"}`}>\r\n          {task.description}\r\n        </li>\r\n        <button\r\n          className=\"complete-btn\"\r\n          onClick={() => toggleCompleted(task._id, task.completed)}\r\n        >\r\n          <i className=\"fas fa-check\"></i>\r\n        </button>\r\n        <button className=\"trash-btn\" onClick={() => deleteTask(task._id)}>\r\n          <i className=\"fas fa-trash\"></i>\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Todo;\r\n","F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\Services\\AuthService.js",[],"F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\config.js",[],"F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\Services\\TodosService.js",[],["224","225"],"F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\Components\\ProtectedRoute.jsx",[],"F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\Components\\isAuthunticatedRoute.jsx",["226"],"F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\Components\\IsAuthunticatedRoute.jsx",[],"F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\Components\\Shared\\Loader\\Loader.jsx",[],"D:\\reactworkspace\\learning\\todolist\\src\\index.js",[],["227","228"],"D:\\reactworkspace\\learning\\todolist\\src\\Components\\TodoList\\TodoList.jsx",["229","230","231","232","233","234","235","236","237"],"D:\\reactworkspace\\learning\\todolist\\src\\Components\\Auth\\Login\\Login.jsx",["238","239","240","241","242","243","244","245","246"],"import React, { useState, useContext } from \"react\";\r\nimport \"./Login.scss\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as authservices from \"../../../Services/AuthService\";\r\nimport { userTokenContext } from \"../../../App\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Loader from \"../../Shared/Loader/Loader\";\r\nimport Field from \"../../Shared/Field/Field\";\r\nimport { useFormik, withFormik, Formik } from \"formik\";\r\nimport { loginAction } from \"../../../Redux/auth/authActions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    // users: state.users,\r\n  };\r\n};\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return { loginFn: (userData) => dispatch(loginAction(userData)) };\r\n};\r\n\r\nconst Login = (props) => {\r\n  const [isLoading, setisLoading] = useState(false);\r\n  const history = useHistory();\r\n  let fields = [\r\n    {\r\n      type: \"text\",\r\n      label: \"E-mail\",\r\n      name: \"email\",\r\n      id: \"\",\r\n      className: \"form-control\",\r\n      placeholder: \"example : demo@demo.com\",\r\n    },\r\n    {\r\n      type: \"password\",\r\n      label: \"Password\",\r\n      name: \"password\",\r\n      id: \"\",\r\n      className: \"form-control\",\r\n      placeholder: \"enter your password\",\r\n    },\r\n  ];\r\n\r\n  // ================================================================================\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: \"\",\r\n      password: \"\",\r\n    },\r\n\r\n    validate: (values) => {\r\n      const errors = {};\r\n      Object.keys(values).map((v) => {\r\n        if (!values[v]) {\r\n          errors[v] = \"required\";\r\n        }\r\n      });\r\n\r\n      if (values.email) {\r\n        if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n          errors.email = \"Invalid email address\";\r\n        }\r\n      }\r\n\r\n      if (values.password) {\r\n        if (values.password.length < 8) {\r\n          errors.password = \"should be at least 8 charcters\";\r\n        }\r\n      }\r\n      return errors;\r\n    },\r\n\r\n    onSubmit: (values) => {\r\n      props.loginFn(values);\r\n      // setisLoading(true);\r\n      // authservices.login(values).then((res) => {\r\n      //   setisLoading(false);\r\n      //   localStorage.setItem(\"todoToken\", JSON.stringify(res.token));\r\n      //   props.setUserToken(res.token);\r\n      // history.push(\"/todolist\");\r\n      debugger;\r\n      // });\r\n    },\r\n    handleSubmit: (\r\n      values,\r\n      {\r\n        resetForm,\r\n        setErrors,\r\n        setStatus,\r\n        setSubmitting,\r\n        setisLoading,\r\n        setUser,\r\n        history,\r\n      }\r\n    ) => {\r\n      debugger;\r\n    },\r\n  });\r\n  // ================================================================================\r\n\r\n  return (\r\n    <>\r\n      <section className=\"login-section\">\r\n        <div className=\"container main-form-container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6 offset-md-3\">\r\n              <div className=\"form-contianer\">\r\n                {isLoading && <Loader />}\r\n                <h3 className=\"title\">login</h3>\r\n\r\n                <form\r\n                  className=\"form\"\r\n                  // onSubmit={onSubmitForm}\r\n                  onSubmit={formik.handleSubmit}\r\n                >\r\n                  {fields &&\r\n                    fields.map((field, fieldIndex) => {\r\n                      return (\r\n                        <Field\r\n                          {...field}\r\n                          key={fieldIndex}\r\n                          // field.name (email , password)\r\n                          value={formik.values[field.name]}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          touched={formik.touched[field.name]}\r\n                          errors={formik.errors[field.name]}\r\n                        />\r\n                      );\r\n                    })}\r\n\r\n                  {/* <div className=\"form-group\">\r\n                    <label>E-mail</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"email\"\r\n                      id=\"\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"example : demo@demo.com\"\r\n                      value={user.email}\r\n                      onChange={onchangeInput}\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"form-group\">\r\n                    <label>Password</label>\r\n                    <input\r\n                      type=\"password\"\r\n                      name=\"password\"\r\n                      id=\"\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"example : demodemo\"\r\n                      value={user.password}\r\n                      onChange={onchangeInput}\r\n                    />\r\n                  </div> */}\r\n\r\n                  <Link to=\"/register\" className=\"reg-link\">\r\n                    register new account\r\n                  </Link>\r\n\r\n                  <button\r\n                    className=\"submit\"\r\n                    value=\"submit\"\r\n                    type=\"submit\"\r\n                    className=\"submit-btn\"\r\n                    disabled={!(formik.isValid && formik.dirty)}\r\n                  >\r\n                    Submit\r\n                  </button>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","D:\\reactworkspace\\learning\\todolist\\src\\Components\\TodoList\\Todo\\Todo.jsx",["247","248","249"],"import React, { useState, useEffect } from \"react\";\r\nimport * as todoservice from \"../../../Services/TodosService\";\r\nimport './Todo.scss'\r\nimport { Link } from 'react-router-dom';\r\nconst Todo = ({ task, allTasks, setallTasks }) => {\r\n  let utoken = \"\";\r\n  const [taskIsLoadingCompleted, settaskIsLoadingCompleted] = useState(false);\r\n  const [taskIsDeleteing, settaskIsDeleteing] = useState(false);\r\n\r\n\r\n  // useEffect(() => {\r\n  //   settaskIsLoadingCompleted(false);\r\n  //   debugger\r\n  // }, [allTasks])\r\n\r\n\r\n  // =======================================================================\r\n  let toggleCompleted = (taskId, isCompleted) => {\r\n    utoken = JSON.parse(localStorage.getItem(\"todoToken\"));\r\n    settaskIsLoadingCompleted(true)\r\n\r\n    todoservice.toggleCompleted(utoken, taskId, isCompleted).then((res) => {\r\n      console.log(\"toggleCompleted\", res);\r\n      let wantedElement = allTasks.find((el) => el._id == taskId);\r\n      allTasks[allTasks.indexOf(wantedElement)].completed = !isCompleted;\r\n      let newAllTasks = [...allTasks];\r\n      setallTasks(newAllTasks);\r\n      settaskIsLoadingCompleted(false)\r\n    })\r\n\r\n  };\r\n\r\n  // =================================================\r\n\r\n  // settaskIsDeleteing(true);\r\n  let deleteTask = (taskId) => {\r\n    settaskIsDeleteing(true);\r\n\r\n    utoken = JSON.parse(localStorage.getItem(\"todoToken\"));\r\n    todoservice.deleteTask(utoken, taskId).then((res) => {\r\n      console.log(\"delete response\", res);\r\n      settaskIsDeleteing(false);\r\n\r\n      let wantedElement = allTasks.find((el) => el._id == taskId);\r\n      let elementIndex = allTasks.indexOf(wantedElement);\r\n      allTasks.splice(elementIndex, 1);\r\n      let newAllTasks = [...allTasks];\r\n\r\n      setallTasks(newAllTasks);\r\n\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"todo\">\r\n        <Link to={`/todolist/${task._id}`} className=\"d-block flex-110 \">\r\n          <li className={`todo-item d-block flex-110 ${task.completed && \"completed\"}`}>\r\n            {task.description}\r\n          </li>\r\n        </Link>\r\n        <button\r\n          className=\"complete-btn\"\r\n          onClick={() => toggleCompleted(task._id, task.completed)}\r\n          disabled={taskIsLoadingCompleted}\r\n        >\r\n          <i className=\"fas fa-check\"></i>\r\n        </button>\r\n        <button className=\"trash-btn\" onClick={() => deleteTask(task._id)} disabled={taskIsDeleteing}>\r\n          <i className=\"fas fa-trash\"></i>\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Todo;\r\n",["250","251"],"D:\\reactworkspace\\learning\\todolist\\src\\Components\\TodoList\\TodoForm\\TodoForm.jsx",[],"D:\\reactworkspace\\learning\\todolist\\src\\Components\\ProtectedRoute.jsx",[],"D:\\reactworkspace\\learning\\todolist\\src\\Components\\IsAuthunticatedRoute.jsx",[],["252","253"],"D:\\reactworkspace\\learning\\todolist\\src\\App.jsx",["254","255","256","257","258","259","260","261"],"import \"./App.scss\";\nimport { useState, createContext, useEffect, Suspense, lazy } from \"react\";\n// components\nimport Home from \"./Components/Home/Home.jsx\";\nimport HeaderComponent from \"../src/Components/Shared/HeaderComponent/HeaderComponent\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Footer from \"./Components/Shared/Footer/Footer\";\nimport {\n  BrowserRouter,\n  BrowserRouter as Router,\n  Route,\n  Switch,\n} from \"react-router-dom\";\nimport ProtectedRoute from \"./Components/ProtectedRoute\";\nimport IsAuthunticatedRoute from \"./Components/IsAuthunticatedRoute\";\nimport * as authservice from \"./Services/AuthService\";\nimport { createMemorySource, createHistory } from \"@reach/router\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\n// ==========================Redux\nimport { Provider } from \"react-redux\";\nimport { persistor, store } from \"./Redux/store\";\nimport Loader from \"./Components/Shared/Loader/Loader\";\n\nlet history = createHistory(window);\n\n// ===================pages\nconst Login = lazy(() => import(\"./Components/Auth/Login/Login\"));\nconst Registeration = lazy(() =>\n  import(\"./Components/Auth/Registeration/Registeration\")\n);\nconst TodoList = lazy(() => import(\"./Components/TodoList/TodoList\"));\nconst TodoPage = lazy(() => import(\"./Components/TodoList/TodoPage/TodoPage\"));\n\nexport let userTokenContext = createContext();\nfunction App() {\n  const [userToken, setUserToken] = useState(\"\");\n\n  let getTokenFromLocalStorage = () => {\n    if (authservice.checkAuthentication())\n      setUserToken(JSON.parse(localStorage.getItem(\"todoToken\")));\n  };\n\n  useEffect(() => {\n    getTokenFromLocalStorage();\n  }, []);\n\n  return (\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <div className=\"\">\n          <BrowserRouter forceRefresh={true}>\n            <Suspense fallback={<div>Loading...</div>}>\n              <HeaderComponent\n              // userToken={userToken}\n              // setUserToken={setUserToken}\n              />\n\n              <Switch>\n                <Route exact path=\"/\" exact component={Home} />\n                <Route exact path=\"/login\" exact>\n                  <Login></Login>\n                  {/* <userTokenContext.Provider value={userToken}>\n                  <IsAuthunticatedRoute\n                    component={Login}\n                    userToken={userToken}\n                    setUserToken={setUserToken}\n                  />\n                </userTokenContext.Provider> */}\n                </Route>\n\n                <Route exact path=\"/register\" exact component={Registeration} />\n\n                <ProtectedRoute\n                  exact\n                  path=\"/todolist\"\n                  component={TodoList}\n                  userToken={userToken}\n                ></ProtectedRoute>\n\n                <ProtectedRoute\n                  exact\n                  path=\"/todolist/:todoId\"\n                  component={TodoPage}\n                  userToken={userToken}\n                ></ProtectedRoute>\n              </Switch>\n\n              <Footer />\n            </Suspense>\n          </BrowserRouter>\n        </div>\n        {/* <Loader></Loader> */}\n      </PersistGate>\n    </Provider>\n  );\n}\n\nexport default App;\n",["262","263"],"D:\\reactworkspace\\learning\\todolist\\src\\Components\\Auth\\Registeration\\Registeration.jsx",["264"],"import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Registeration.scss\";\r\nimport * as authservices from \"../../../Services/AuthService\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useFormik } from 'formik';\r\nimport Field from '../../Shared/Field/Field';\r\nimport Loader from '../../Shared/Loader/Loader';\r\nimport * as Yup from 'yup';\r\nfunction Registeration() {\r\n\r\n\r\n  const [isLoading, setisLoading] = useState(false);\r\n  const history = useHistory();\r\n\r\n\r\n\r\n  let fields = [\r\n    { type: 'text', label: 'Name', name: \"name\", id: \"\", className: \"form-control\", placeholder: \"your name :\" },\r\n    { type: 'email', label: 'E-mail', name: \"email\", id: \"\", className: \"form-control\", placeholder: \"example : demo@demo.com\" },\r\n    { type: 'password', label: 'password', name: \"password\", id: \"\", className: \"form-control\", placeholder: \"enter your password\" },\r\n    { type: 'text', label: 'Age', name: \"age\", id: \"\", className: \"form-control\", placeholder: \"enter your age :\" },\r\n  ]\r\n\r\n\r\n  // ================================================================================\r\n\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      name: '',\r\n      email: '',\r\n      password: '',\r\n      age: 0\r\n\r\n    },\r\n\r\n\r\n    validationSchema: Yup.object({\r\n      name: Yup.string().required('required from Yup').min(3, 'minimum length 3 '),\r\n      email: Yup.string().email('Invalid email format').required('required'),\r\n      password: Yup.string().min(8, \"Minimum 8 characters\").required(\"Required!\")\r\n        .matches(\r\n          /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/,\r\n          \"Must Contain 8 Characters, One Uppercase, One Lowercase, One Number and one special case Character\"\r\n        ),\r\n      age: Yup.number().required('age is required').positive('age must be greater than zero')\r\n\r\n    }),\r\n    onSubmit: (values, { resetForm }) => {\r\n      setisLoading(true);\r\n      authservices.registeration(values).then((res) => {\r\n        resetForm();\r\n        console.log(res);\r\n        history.push(\"/login\");\r\n      });\r\n    },\r\n    handleSubmit: (values, { resetForm, setErrors, setStatus, setSubmitting, setisLoading, setUser, history }) => {\r\n      debugger\r\n    }\r\n  });\r\n\r\n  return (\r\n    <section className=\"login-section\">\r\n      <div className=\"container main-form-container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6 offset-md-3\">\r\n            <div className=\"form-contianer\">\r\n              {isLoading && <Loader />}\r\n              <h3 className=\"title\">registeration</h3>\r\n              <form action=\"\" className=\"form\" onSubmit={formik.handleSubmit}>\r\n\r\n\r\n\r\n                {fields && fields.map((field, fieldIndex) => {\r\n                  return (\r\n                    <Field {...field}\r\n                      key={fieldIndex}\r\n                      // field name (email , password)\r\n                      value={formik.values[field.name]}\r\n                      onChange={formik.handleChange}\r\n                      onBlur={formik.handleBlur}\r\n                      touched={formik.touched[field.name]}\r\n                      errors={formik.errors[field.name]}\r\n\r\n                    />\r\n                  )\r\n                })}\r\n\r\n                <Link to=\"/login\" className=\"reg-link\">\r\n                  I already have account\r\n                </Link>\r\n\r\n                <button\r\n                  className=\"submit\"\r\n                  value=\"submit\"\r\n                  type=\"submit\"\r\n                  className=\"submit-btn\"\r\n                  disabled={!(formik.isValid && formik.dirty)}\r\n                >\r\n                  Submit\r\n                  </button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Registeration;\r\n","D:\\reactworkspace\\learning\\todolist\\src\\Services\\TodosService.js",[],"D:\\reactworkspace\\learning\\todolist\\src\\Components\\TodoList\\TodoPage\\TodoPage.jsx",["265"],"import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport * as taskServices from '../../../Services/TodosService';\r\nfunction TodoPage(props) {\r\n    const [curentTask, setCurrentTask] = useState({});\r\n    const history = useHistory();\r\n    let utoken = \"\"\r\n    // console.log(+props.computedMatch.params.todoId);\r\n\r\n    let getTask = () => {\r\n        let CurrentTaskIId = props.computedMatch.params.todoId;\r\n        utoken = JSON.parse(localStorage.getItem(\"todoToken\"));\r\n        taskServices.getSingleTask(utoken, CurrentTaskIId).then((res) => {\r\n            console.log(res.data);\r\n            if (res.data.success) {\r\n                setCurrentTask(res.data.data);\r\n            } else {\r\n\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    let updateTask = () => {\r\n        let CurrentTaskIId = props.computedMatch.params.todoId;\r\n        utoken = JSON.parse(localStorage.getItem(\"todoToken\"));\r\n\r\n        curentTask.description !== \"\" && taskServices.updateTask(utoken, CurrentTaskIId, curentTask.description).then(res => {\r\n            console.log('res', res);\r\n        })\r\n    }\r\n\r\n\r\n    let toggleComplete = () => {\r\n        let CurrentTaskIId = props.computedMatch.params.todoId;\r\n        utoken = JSON.parse(localStorage.getItem(\"todoToken\"));\r\n\r\n\r\n        curentTask.description !== \"\" && taskServices.toggleCompletedFull(utoken, CurrentTaskIId, curentTask.completed, curentTask.description).then(res => {\r\n            // console.log('res', res);\r\n\r\n            if (res.data.success) {\r\n                setCurrentTask(res.data.data);\r\n            } else {\r\n\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n\r\n    let deleteCuurentTask = () => {\r\n        let CurrentTaskIId = props.computedMatch.params.todoId;\r\n        utoken = JSON.parse(localStorage.getItem(\"todoToken\"));\r\n        taskServices.deleteTask(utoken, CurrentTaskIId).then(res => {\r\n            if (res.data.success) {\r\n                setCurrentTask({});\r\n                history.goBack();\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        getTask();\r\n    }, [])\r\n\r\n    let onChangeHandler = (e) => {\r\n        setCurrentTask({ ...curentTask, description: e.target.value })\r\n    }\r\n    return (\r\n        <section className=\"home\">\r\n            <div className=\"w-100\">\r\n\r\n\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-6 offset-lg-3\">\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\" name=\"\" className={`form-control ${curentTask.completed && 'completed'}`}\r\n                                    placeholder=\"Task\"\r\n                                    value={curentTask.description || ''} onChange={onChangeHandler} />\r\n                                <button name=\"\" className=\"btn btn-primary mx-1 mt-2\" onClick={updateTask}>\r\n                                    Submit\r\n                                </button>\r\n\r\n                                <button name=\"\" className=\"btn btn-success mx-1 mt-2\" onClick={() => toggleComplete(curentTask.completed)}>\r\n                                    {curentTask.completed ? 'not Finshed' : 'finished !'}\r\n                                </button>\r\n\r\n                                <button name=\"\" className=\"btn btn-danger mx-1 mt-2\" onClick={deleteCuurentTask}>\r\n                                    delete\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </section>\r\n\r\n    )\r\n}\r\n\r\nexport default TodoPage\r\n\r\n",["266","267"],"D:\\reactworkspace\\learning\\todolist\\src\\Components\\Shared\\HeaderComponent\\HeaderComponent.jsx",["268","269","270","271","272"],"import React from \"react\";\r\nimport \"./HeaderComponent.scss\";\r\nimport { Navbar, NavDropdown, Nav } from \"react-bootstrap\";\r\nimport * as authservice from \"../../../Services/AuthService\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport { logoutAction } from \"../../../Redux/auth/authActions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    authToken: state.auth.authToken,\r\n  };\r\n};\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return { logoutFn: (uToken) => dispatch(logoutAction(uToken)) };\r\n};\r\n\r\nfunction HeaderComponent({ authToken, logoutFn }) {\r\n  // console.log(\"props of Header \", props);\r\n\r\n  const history = useHistory();\r\n\r\n  const onLogoutHandler = (e) => {\r\n    e.preventDefault();\r\n    // console.log(\"props of Header \", props);\r\n\r\n    // authservice.logout(userToken).then((res) => {\r\n    //   console.log(\"logout res\", res);\r\n    //   localStorage.removeItem(\"todoToken\");\r\n    //   setUserToken(\"\");\r\n    //   history.push(\"/login\");\r\n    // });\r\n  };\r\n  return (\r\n    <>\r\n      <Navbar expand=\"lg\">\r\n        <div className=\"container\">\r\n          <Navbar.Brand className=\"navbar-brand\" href=\"#home\">\r\n            TODO\r\n          </Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"nav-ul-margin\">\r\n              <ul className=\"navbar-nav\">\r\n                <li className=\"nav-item\">\r\n                  <Link to=\"/\" className=\"nav-link\">\r\n                    Home\r\n                  </Link>\r\n                </li>\r\n\r\n                {!authToken && (\r\n                  <li className=\"nav-item\">\r\n                    <Link to=\"/login\" className=\"nav-link\">\r\n                      Login\r\n                    </Link>\r\n                  </li>\r\n                )}\r\n                {!authToken && (\r\n                  <li className=\"nav-item\">\r\n                    <Link to=\"/register\" className=\"nav-link\">\r\n                      Registeration\r\n                    </Link>\r\n                  </li>\r\n                )}\r\n                {authToken && (\r\n                  <li className=\"nav-item\">\r\n                    <Link to=\"/todolist\" className=\"nav-link\">\r\n                      todolist\r\n                    </Link>\r\n                  </li>\r\n                )}\r\n\r\n                {authToken && (\r\n                  <li className=\"nav-item\">\r\n                    <a className=\"nav-link\" onClick={() => logoutFn(authToken)}>\r\n                      Logout\r\n                    </a>\r\n                  </li>\r\n                )}\r\n              </ul>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </div>\r\n      </Navbar>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HeaderComponent);\r\n","D:\\reactworkspace\\learning\\todolist\\src\\Components\\Shared\\Field\\Field.jsx",[],"D:\\reactworkspace\\learning\\todolist\\src\\reportWebVitals.js",[],["273","274"],"D:\\reactworkspace\\learning\\todolist\\src\\Services\\AuthService.js",[],["275","276"],"D:\\reactworkspace\\learning\\todolist\\src\\Components\\Home\\Home.jsx",[],["277","278"],"D:\\reactworkspace\\learning\\todolist\\src\\Components\\Shared\\Pagination\\Pagination.jsx",["279","280","281","282","283","284"],"import React from 'react';\r\nimport { IconButton, Select, Typography } from \"@material-ui/core\";\r\nimport './Pagination.scss';\r\n\r\nfunction Pagination({ className, pageSize = 10, page = 1, count = 0, onChange, ...props }) {\r\n    const totalPagesState = React.useState(1);\r\n    const pageRangeState = React.useState([0, 0]);\r\n\r\n    React.useEffect(() => {\r\n        if (pageSize === 0 || !pageSize) {\r\n            if (onChange) onChange(1, 10);\r\n            return;\r\n        }\r\n        if (page === 0 || !page) {\r\n            if (onChange) onChange(2, 1);\r\n            return;\r\n        }\r\n        if (count < pageSize * (page - 1)) {\r\n            if (onChange) onChange(2, 1);\r\n            return;\r\n        }\r\n        const totalPages = Math.ceil(count / pageSize);\r\n        totalPagesState[1](totalPages);\r\n        const startNo = Math.min(count, 1 + pageSize * (page - 1));\r\n        const endNo = Math.min(count, pageSize * page);\r\n        if (startNo === NaN) startNo = 0;\r\n        if (endNo === NaN) endNo = 0;\r\n        pageRangeState[1]([startNo, endNo]);\r\n    }, [page, pageSize, count]);\r\n\r\n    return (\r\n        <div className={`row ml-0 mr-0 pagination ${className}`} {...props}>\r\n            <div className=\"align-center-vh mr-2\">\r\n                <Typography noWrap className=\"c-blue\">\r\n                    Rows per page:\r\n          </Typography>\r\n            </div>\r\n            <div className=\"align-center-vh mr-5\">\r\n                <Select\r\n                    native\r\n                    value={pageSize ?? 10}\r\n                    onChange={(e) => {\r\n                        if (onChange) onChange(1, parseInt(e.target.value) ?? 10);\r\n                    }}\r\n                >\r\n                    {[2, 5, 10, 15, 20, 25, 30].map((o, oi) => (\r\n                        <option value={o} key={`Page-Option-${o}-${oi}`}>\r\n                            {o}\r\n                        </option>\r\n                    ))}\r\n                </Select>\r\n            </div>\r\n\r\n            <div className=\"align-center-vh\">\r\n\r\n                <Typography noWrap className='mr-3 c-blue'>\r\n                    {`${pageRangeState[0][0]} - ${pageRangeState[0][1]} of ${count}`}\r\n                </Typography>\r\n\r\n                <div\r\n                    className=\"left-arrow\"\r\n                    onClick={(e) => {\r\n                        if (onChange) onChange(2, page - 1);\r\n                    }}\r\n                    disabled={pageRangeState[0][0] === 0 || pageRangeState[0][0] === 1}\r\n                >\r\n                    <i className=\"fas fa-chevron-left c-blue\"></i>\r\n                </div>\r\n\r\n\r\n                <div\r\n                    className=\"right-arrow\"\r\n                    onClick={(e) => {\r\n                        if (onChange) onChange(2, page + 1);\r\n                    }}\r\n                    disabled={pageRangeState[0][1] >= count}\r\n                >\r\n                    <i className=\"fas fa-chevron-right c-blue\"></i>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Pagination\r\n\r\n","D:\\reactworkspace\\learning\\todolist\\src\\Components\\Shared\\Footer\\Footer.jsx",[],["285","286"],"D:\\reactworkspace\\learning\\todolist\\src\\Components\\Shared\\Loader\\Loader.jsx",[],"D:\\reactworkspace\\learning\\todolist\\src\\Redux\\store.js",[],["287","288"],"D:\\reactworkspace\\learning\\todolist\\src\\Redux\\auth\\authReducer.js",[],["289","290"],"D:\\reactworkspace\\learning\\todolist\\src\\Redux\\auth\\authConstants.js",[],"D:\\reactworkspace\\learning\\todolist\\src\\Redux\\auth\\authActions.js",["291","292","293"],"import axios from 'axios';\r\nimport { login, logout } from '../../Services/AuthService';\r\nimport { authConstants } from './authConstants';\r\nimport { browserHistory } from \"react-router\";\r\nimport { createBrowserHistory } from 'history';\r\n\r\n\r\nconst history = createBrowserHistory();\r\n\r\n\r\n\r\n//action users \r\n// ==================================================================LOGIN\r\nexport const loginAction = (userData) => {\r\n    return (dispatch) => {\r\n        dispatch(loginRequest());\r\n        // login Fn @authService\r\n        login(userData)\r\n            .then(res => {\r\n                let currentUser = res.data;\r\n                localStorage.setItem(\"todoToken\", JSON.stringify(currentUser.token));\r\n                // dh 2l action payload\r\n                dispatch(loginSuccess(currentUser));\r\n                window.location = window.location.origin + '/todolist'\r\n                // history.push('/todolist');\r\n\r\n            }).catch(err => {\r\n                // err.messsage ==>> dh 2l action payload\r\n                dispatch(loginFailed(err.messsage));\r\n            })\r\n    }\r\n}\r\n\r\nexport const loginRequest = () => {\r\n    return {\r\n        type: authConstants.LOGIN_REQUEST\r\n    }\r\n}\r\n\r\nexport const loginSuccess = ({ token, user }) => {\r\n    return {\r\n        type: authConstants.LOGIN_SUCCESS,\r\n        payload: { token, user }\r\n    }\r\n}\r\n\r\nexport const loginFailed = (errors) => {\r\n    return {\r\n        type: authConstants.LOGIN_FAILED,\r\n        payload: errors\r\n    }\r\n}\r\n// ----------------------------------------------------------------LOGOUT\r\nexport const logoutAction = (uToken) => {\r\n    debugger\r\n    return (dispatch) => {\r\n        dispatch(loginRequest());\r\n        logout(uToken).then((res) => {\r\n            // dispatch(loginSuccess(currentUser));\r\n            debugger\r\n            if (res.data?.success) dispatch(LogoutSuccess());\r\n            localStorage.removeItem(\"todoToken\");\r\n            window.location = window.location.origin + '/login'\r\n        }).catch(err => {\r\n            debugger\r\n            // err.messsage ==>> dh 2l action payload\r\n            dispatch(LogoutFailed());\r\n            // dispatch(loginFailed(err.messsage));\r\n        })\r\n    }\r\n}\r\n\r\nexport const LogoutRequest = () => {\r\n    return {\r\n        type: authConstants.LOGOUT_REQUEST\r\n    }\r\n}\r\n\r\nexport const LogoutSuccess = () => {\r\n    return {\r\n        type: authConstants.LOGOUT_SUCCESS,\r\n        // payload: { token, user }\r\n    }\r\n}\r\n\r\nexport const LogoutFailed = () => {\r\n    return {\r\n        type: authConstants.LOGOUT_FAILED,\r\n        // payload: errors\r\n    }\r\n}\r\n","D:\\reactworkspace\\learning\\todolist\\src\\config.js",[],"D:\\reactworkspace\\learning\\todolist\\src\\Redux\\Todos\\todosConstants.js",[],"D:\\reactworkspace\\learning\\todolist\\src\\Redux\\Todos\\todosAction.js",[],"D:\\reactworkspace\\learning\\todolist\\src\\Redux\\Todos\\todosReducer.js",[],{"ruleId":"294","replacedBy":"295"},{"ruleId":"296","replacedBy":"297"},{"ruleId":"298","severity":1,"message":"299","line":34,"column":33,"nodeType":"300","endLine":34,"endColumn":38},{"ruleId":"298","severity":1,"message":"299","line":35,"column":38,"nodeType":"300","endLine":35,"endColumn":43},{"ruleId":"298","severity":1,"message":"299","line":45,"column":41,"nodeType":"300","endLine":45,"endColumn":46},{"ruleId":"301","severity":1,"message":"302","line":3,"column":18,"nodeType":"303","messageId":"304","endLine":3,"endColumn":29},{"ruleId":"305","severity":1,"message":"306","line":60,"column":21,"nodeType":"307","endLine":60,"endColumn":71},{"ruleId":"294","replacedBy":"308"},{"ruleId":"296","replacedBy":"309"},{"ruleId":"298","severity":1,"message":"299","line":89,"column":21,"nodeType":"300","endLine":89,"endColumn":43},{"ruleId":"298","severity":1,"message":"299","line":104,"column":19,"nodeType":"300","endLine":104,"endColumn":41},{"ruleId":"301","severity":1,"message":"310","line":15,"column":10,"nodeType":"303","messageId":"304","endLine":15,"endColumn":21},{"ruleId":"311","severity":1,"message":"312","line":46,"column":6,"nodeType":"313","endLine":46,"endColumn":8,"suggestions":"314"},{"ruleId":"315","severity":1,"message":"316","line":11,"column":56,"nodeType":"317","messageId":"318","endLine":11,"endColumn":58},{"ruleId":"315","severity":1,"message":"316","line":27,"column":56,"nodeType":"317","messageId":"318","endLine":27,"endColumn":58},{"ruleId":"294","replacedBy":"319"},{"ruleId":"296","replacedBy":"320"},{"ruleId":"321","severity":2,"message":"322","line":16,"column":6,"nodeType":"323","endLine":16,"endColumn":14},{"ruleId":"294","replacedBy":"324"},{"ruleId":"296","replacedBy":"325"},{"ruleId":"301","severity":1,"message":"326","line":6,"column":13,"nodeType":"303","messageId":"304","endLine":6,"endColumn":25},{"ruleId":"301","severity":1,"message":"327","line":46,"column":8,"nodeType":"303","messageId":"304","endLine":46,"endColumn":16},{"ruleId":"301","severity":1,"message":"328","line":47,"column":8,"nodeType":"303","messageId":"304","endLine":47,"endColumn":24},{"ruleId":"301","severity":1,"message":"329","line":47,"column":26,"nodeType":"303","messageId":"304","endLine":47,"endColumn":45},{"ruleId":"301","severity":1,"message":"330","line":52,"column":10,"nodeType":"303","messageId":"304","endLine":52,"endColumn":22},{"ruleId":"301","severity":1,"message":"331","line":52,"column":24,"nodeType":"303","messageId":"304","endLine":52,"endColumn":39},{"ruleId":"311","severity":1,"message":"332","line":80,"column":6,"nodeType":"313","endLine":80,"endColumn":8,"suggestions":"333"},{"ruleId":"311","severity":1,"message":"334","line":85,"column":6,"nodeType":"313","endLine":85,"endColumn":21,"suggestions":"335"},{"ruleId":"311","severity":1,"message":"336","line":99,"column":6,"nodeType":"313","endLine":99,"endColumn":41,"suggestions":"337"},{"ruleId":"301","severity":1,"message":"338","line":1,"column":27,"nodeType":"303","messageId":"304","endLine":1,"endColumn":37},{"ruleId":"301","severity":1,"message":"326","line":4,"column":13,"nodeType":"303","messageId":"304","endLine":4,"endColumn":25},{"ruleId":"301","severity":1,"message":"339","line":5,"column":10,"nodeType":"303","messageId":"304","endLine":5,"endColumn":26},{"ruleId":"301","severity":1,"message":"340","line":9,"column":21,"nodeType":"303","messageId":"304","endLine":9,"endColumn":31},{"ruleId":"301","severity":1,"message":"341","line":9,"column":33,"nodeType":"303","messageId":"304","endLine":9,"endColumn":39},{"ruleId":"301","severity":1,"message":"342","line":23,"column":21,"nodeType":"303","messageId":"304","endLine":23,"endColumn":33},{"ruleId":"301","severity":1,"message":"343","line":24,"column":9,"nodeType":"303","messageId":"304","endLine":24,"endColumn":16},{"ruleId":"344","severity":1,"message":"345","line":53,"column":35,"nodeType":"346","messageId":"347","endLine":53,"endColumn":37},{"ruleId":"298","severity":1,"message":"299","line":166,"column":21,"nodeType":"300","endLine":166,"endColumn":43},{"ruleId":"301","severity":1,"message":"348","line":1,"column":27,"nodeType":"303","messageId":"304","endLine":1,"endColumn":36},{"ruleId":"315","severity":1,"message":"316","line":24,"column":56,"nodeType":"317","messageId":"318","endLine":24,"endColumn":58},{"ruleId":"315","severity":1,"message":"316","line":44,"column":56,"nodeType":"317","messageId":"318","endLine":44,"endColumn":58},{"ruleId":"294","replacedBy":"349"},{"ruleId":"296","replacedBy":"350"},{"ruleId":"294","replacedBy":"351"},{"ruleId":"296","replacedBy":"352"},{"ruleId":"301","severity":1,"message":"353","line":10,"column":20,"nodeType":"303","messageId":"304","endLine":10,"endColumn":26},{"ruleId":"301","severity":1,"message":"354","line":15,"column":8,"nodeType":"303","messageId":"304","endLine":15,"endColumn":28},{"ruleId":"301","severity":1,"message":"355","line":17,"column":10,"nodeType":"303","messageId":"304","endLine":17,"endColumn":28},{"ruleId":"301","severity":1,"message":"356","line":23,"column":8,"nodeType":"303","messageId":"304","endLine":23,"endColumn":14},{"ruleId":"301","severity":1,"message":"343","line":25,"column":5,"nodeType":"303","messageId":"304","endLine":25,"endColumn":12},{"ruleId":"298","severity":1,"message":"299","line":60,"column":39,"nodeType":"300","endLine":60,"endColumn":44},{"ruleId":"298","severity":1,"message":"299","line":61,"column":44,"nodeType":"300","endLine":61,"endColumn":49},{"ruleId":"298","severity":1,"message":"299","line":72,"column":47,"nodeType":"300","endLine":72,"endColumn":52},{"ruleId":"294","replacedBy":"357"},{"ruleId":"296","replacedBy":"358"},{"ruleId":"298","severity":1,"message":"299","line":98,"column":19,"nodeType":"300","endLine":98,"endColumn":41},{"ruleId":"311","severity":1,"message":"359","line":65,"column":8,"nodeType":"313","endLine":65,"endColumn":10,"suggestions":"360"},{"ruleId":"294","replacedBy":"361"},{"ruleId":"296","replacedBy":"362"},{"ruleId":"301","severity":1,"message":"302","line":3,"column":18,"nodeType":"303","messageId":"304","endLine":3,"endColumn":29},{"ruleId":"301","severity":1,"message":"363","line":4,"column":13,"nodeType":"303","messageId":"304","endLine":4,"endColumn":24},{"ruleId":"301","severity":1,"message":"343","line":21,"column":9,"nodeType":"303","messageId":"304","endLine":21,"endColumn":16},{"ruleId":"301","severity":1,"message":"364","line":23,"column":9,"nodeType":"303","messageId":"304","endLine":23,"endColumn":24},{"ruleId":"305","severity":1,"message":"306","line":75,"column":21,"nodeType":"307","endLine":75,"endColumn":81},{"ruleId":"294","replacedBy":"365"},{"ruleId":"296","replacedBy":"366"},{"ruleId":"294","replacedBy":"367"},{"ruleId":"296","replacedBy":"368"},{"ruleId":"294","replacedBy":"369"},{"ruleId":"296","replacedBy":"370"},{"ruleId":"301","severity":1,"message":"371","line":2,"column":10,"nodeType":"303","messageId":"304","endLine":2,"endColumn":20},{"ruleId":"372","severity":1,"message":"373","line":26,"column":13,"nodeType":"317","messageId":"374","endLine":26,"endColumn":28},{"ruleId":"375","severity":1,"message":"376","line":26,"column":30,"nodeType":"303","messageId":"377","endLine":26,"endColumn":37},{"ruleId":"372","severity":1,"message":"373","line":27,"column":13,"nodeType":"317","messageId":"374","endLine":27,"endColumn":26},{"ruleId":"375","severity":1,"message":"378","line":27,"column":28,"nodeType":"303","messageId":"377","endLine":27,"endColumn":33},{"ruleId":"311","severity":1,"message":"379","line":29,"column":8,"nodeType":"313","endLine":29,"endColumn":31,"suggestions":"380"},{"ruleId":"294","replacedBy":"381"},{"ruleId":"296","replacedBy":"382"},{"ruleId":"294","replacedBy":"383"},{"ruleId":"296","replacedBy":"384"},{"ruleId":"294","replacedBy":"385"},{"ruleId":"296","replacedBy":"386"},{"ruleId":"301","severity":1,"message":"387","line":1,"column":8,"nodeType":"303","messageId":"304","endLine":1,"endColumn":13},{"ruleId":"301","severity":1,"message":"388","line":4,"column":10,"nodeType":"303","messageId":"304","endLine":4,"endColumn":24},{"ruleId":"301","severity":1,"message":"343","line":8,"column":7,"nodeType":"303","messageId":"304","endLine":8,"endColumn":14},"no-native-reassign",["389"],"no-negated-in-lhs",["390"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-unused-vars","'NavDropdown' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["389"],["390"],"'listLoading' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getAllTasks'. Either include it or remove the dependency array.","ArrayExpression",["391"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["389"],["390"],"react/jsx-no-undef","'Redirect' is not defined.","JSXIdentifier",["389"],["390"],"'authservices' is defined but never used.","'allTasks' is assigned a value but never used.","'filteredallTasks' is assigned a value but never used.","'setfilteredallTasks' is assigned a value but never used.","'selectedPage' is assigned a value but never used.","'setSelectedPage' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'authToken' and 'fetchTodosList'. Either include them or remove the dependency array.",["392"],"React Hook useLayoutEffect has missing dependencies: 'changeTodosListFilter' and 'todosList'. Either include them or remove the dependency array.",["393"],"React Hook useEffect has a missing dependency: 'paginationFn'. Either include it or remove the dependency array.",["394"],"'useContext' is defined but never used.","'userTokenContext' is defined but never used.","'withFormik' is defined but never used.","'Formik' is defined but never used.","'setisLoading' is assigned a value but never used.","'history' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'useEffect' is defined but never used.",["389"],["390"],["389"],["390"],"'Router' is defined but never used.","'IsAuthunticatedRoute' is defined but never used.","'createMemorySource' is defined but never used.","'Loader' is defined but never used.",["389"],["390"],"React Hook useEffect has a missing dependency: 'getTask'. Either include it or remove the dependency array.",["395"],["389"],["390"],"'authservice' is defined but never used.","'onLogoutHandler' is assigned a value but never used.",["389"],["390"],["389"],["390"],["389"],["390"],"'IconButton' is defined but never used.","use-isnan","Use the isNaN function to compare with NaN.","comparisonWithNaN","no-const-assign","'startNo' is constant.","const","'endNo' is constant.","React Hook React.useEffect has missing dependencies: 'onChange', 'pageRangeState', and 'totalPagesState'. Either include them or remove the dependency array. If 'onChange' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["396"],["389"],["390"],["389"],["390"],["389"],["390"],"'axios' is defined but never used.","'browserHistory' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"397","fix":"398"},{"desc":"399","fix":"400"},{"desc":"401","fix":"402"},{"desc":"403","fix":"404"},{"desc":"405","fix":"406"},{"desc":"407","fix":"408"},"Update the dependencies array to be: [getAllTasks]",{"range":"409","text":"410"},"Update the dependencies array to be: [authToken, fetchTodosList]",{"range":"411","text":"412"},"Update the dependencies array to be: [changeTodosListFilter, filterByValue, todosList]",{"range":"413","text":"414"},"Update the dependencies array to be: [filteredTodosList, page, pageSize, paginationFn]",{"range":"415","text":"416"},"Update the dependencies array to be: [getTask]",{"range":"417","text":"418"},"Update the dependencies array to be: [page, pageSize, count, totalPagesState, pageRangeState, onChange]",{"range":"419","text":"420"},[1221,1223],"[getAllTasks]",[2352,2354],"[authToken, fetchTodosList]",[2466,2481],"[changeTodosListFilter, filterByValue, todosList]",[2817,2852],"[filteredTodosList, page, pageSize, paginationFn]",[2084,2086],"[getTask]",[1064,1087],"[page, pageSize, count, totalPagesState, pageRangeState, onChange]"]