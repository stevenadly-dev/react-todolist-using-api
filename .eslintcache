[{"F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\index.js":"1","F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\reportWebVitals.js":"2","F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\Components\\Home\\Home.jsx":"3","F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\App.jsx":"4","F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\Components\\Shared\\HeaderComponent\\HeaderComponent.jsx":"5","F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\Components\\Shared\\Footer\\Footer.jsx":"6","F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\Components\\Auth\\Login\\Login.jsx":"7","F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\Components\\Auth\\Registeration\\Registeration.jsx":"8","F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\Components\\TodoList\\TodoList.jsx":"9","F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\Components\\TodoList\\TodoForm\\TodoForm.jsx":"10","F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\Components\\TodoList\\Todo\\Todo.jsx":"11","F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\Services\\AuthService.js":"12","F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\config.js":"13","F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\Services\\TodosService.js":"14","F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\Components\\ProtectedRoute.jsx":"15","F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\Components\\isAuthunticatedRoute.jsx":"16","F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\Components\\IsAuthunticatedRoute.jsx":"17","F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\Components\\Shared\\Loader\\Loader.jsx":"18","D:\\reactworkspace\\learning\\todolist\\src\\index.js":"19","D:\\reactworkspace\\learning\\todolist\\src\\Components\\TodoList\\TodoList.jsx":"20","D:\\reactworkspace\\learning\\todolist\\src\\Components\\Auth\\Login\\Login.jsx":"21","D:\\reactworkspace\\learning\\todolist\\src\\Components\\TodoList\\Todo\\Todo.jsx":"22","D:\\reactworkspace\\learning\\todolist\\src\\Components\\TodoList\\TodoForm\\TodoForm.jsx":"23","D:\\reactworkspace\\learning\\todolist\\src\\Components\\ProtectedRoute.jsx":"24","D:\\reactworkspace\\learning\\todolist\\src\\Components\\IsAuthunticatedRoute.jsx":"25"},{"size":504,"mtime":1609590775573,"results":"26","hashOfConfig":"27"},{"size":362,"mtime":1607939826535,"results":"28","hashOfConfig":"27"},{"size":361,"mtime":1609560749529,"results":"29","hashOfConfig":"27"},{"size":1980,"mtime":1609761603104,"results":"30","hashOfConfig":"27"},{"size":2503,"mtime":1609787353066,"results":"31","hashOfConfig":"27"},{"size":252,"mtime":1609596793717,"results":"32","hashOfConfig":"27"},{"size":3083,"mtime":1609839916120,"results":"33","hashOfConfig":"27"},{"size":3384,"mtime":1609686435838,"results":"34","hashOfConfig":"27"},{"size":2114,"mtime":1609840408662,"results":"35","hashOfConfig":"27"},{"size":1289,"mtime":1609787462274,"results":"36","hashOfConfig":"27"},{"size":1770,"mtime":1609720646643,"results":"37","hashOfConfig":"27"},{"size":2493,"mtime":1609761367012,"results":"38","hashOfConfig":"27"},{"size":397,"mtime":1609638248382,"results":"39","hashOfConfig":"27"},{"size":1892,"mtime":1609725647630,"results":"40","hashOfConfig":"27"},{"size":601,"mtime":1609786907619,"results":"41","hashOfConfig":"27"},{"size":506,"mtime":1609754426515,"results":"42","hashOfConfig":"27"},{"size":547,"mtime":1609757960801,"results":"43","hashOfConfig":"27"},{"size":311,"mtime":1609840205224,"results":"44","hashOfConfig":"27"},{"size":504,"mtime":1609590775573,"results":"45","hashOfConfig":"46"},{"size":3385,"mtime":1609995204981,"results":"47","hashOfConfig":"46"},{"size":3083,"mtime":1609839916120,"results":"48","hashOfConfig":"46"},{"size":2325,"mtime":1609991912510,"results":"49","hashOfConfig":"46"},{"size":1379,"mtime":1609995067023,"results":"50","hashOfConfig":"46"},{"size":601,"mtime":1609786907619,"results":"51","hashOfConfig":"46"},{"size":547,"mtime":1609757960801,"results":"52","hashOfConfig":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},"fyjkkl",{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},"m7q2or",{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\index.js",[],["111","112"],"F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\reportWebVitals.js",[],"F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\Components\\Home\\Home.jsx",[],"F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\App.jsx",["113","114","115"],"F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\Components\\Shared\\HeaderComponent\\HeaderComponent.jsx",["116","117"],"F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\Components\\Shared\\Footer\\Footer.jsx",[],["118","119"],"F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\Components\\Auth\\Login\\Login.jsx",["120"],"import React, { useState, useContext } from \"react\";\r\nimport \"./Login.scss\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as authservices from \"../../../Services/AuthService\";\r\nimport { userTokenContext } from \"../../../App\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Loader from \"../../Shared/Loader/Loader\";\r\n\r\nconst Login = ({ userToken, setUserToken }) => {\r\n  let newUser = useContext(userTokenContext);\r\n  const [user, setUser] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  const [isLoading, setisLoading] = useState(false);\r\n  const history = useHistory();\r\n\r\n  let onchangeInput = (e) => {\r\n    setUser({\r\n      ...user,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n\r\n    console.log(newUser);\r\n    // console.log(\"userToken\", userToken);\r\n  };\r\n\r\n  let onSubmitForm = (e) => {\r\n    e.preventDefault();\r\n    setisLoading(true);\r\n    authservices.login(user).then((res) => {\r\n      setisLoading(false);\r\n      localStorage.setItem(\"todoToken\", JSON.stringify(res.token));\r\n      setUserToken(res.token);\r\n\r\n      setUser({\r\n        email: \"\",\r\n        password: \"\",\r\n      });\r\n      history.push(\"/todolist\");\r\n\r\n      // console.log(res);\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      <section className=\"login-section\">\r\n        <div className=\"container main-form-container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6 offset-md-3\">\r\n              <div className=\"form-contianer\">\r\n                {isLoading && <Loader />}\r\n                <h3 className=\"title\">login</h3>\r\n\r\n                <form className=\"form\" onSubmit={onSubmitForm}>\r\n                  <div className=\"form-group\">\r\n                    <label>E-mail</label>\r\n\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"email\"\r\n                      id=\"\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"example : demo@demo.com\"\r\n                      value={user.email}\r\n                      onChange={onchangeInput}\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <label>Password</label>\r\n                    <input\r\n                      type=\"password\"\r\n                      name=\"password\"\r\n                      id=\"\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"example : demodemo\"\r\n                      value={user.password}\r\n                      onChange={onchangeInput}\r\n                    />\r\n                  </div>\r\n\r\n                  <Link to=\"/register\" className=\"reg-link\">\r\n                    register new account\r\n                  </Link>\r\n\r\n                  <button\r\n                    className=\"submit\"\r\n                    value=\"submit\"\r\n                    className=\"submit-btn\"\r\n                  >\r\n                    Submit\r\n                  </button>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\Components\\Auth\\Registeration\\Registeration.jsx",["121"],"import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Registeration.scss\";\r\nimport * as authservices from \"../../../Services/AuthService\";\r\nimport { useHistory } from \"react-router-dom\";\r\nfunction Registeration() {\r\n  const [user, setUser] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    age: 0,\r\n  });\r\n  const history = useHistory();\r\n\r\n  let inputOnChange = (e) => {\r\n    setUser({\r\n      ...user,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  let onSubmit = (e) => {\r\n    e.preventDefault();\r\n    authservices.registeration(user).then((res) => {\r\n      setUser({\r\n        name: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        age: 0,\r\n      });\r\n      console.log(res);\r\n      history.push(\"/login\");\r\n    });\r\n  };\r\n  return (\r\n    <section className=\"login-section\">\r\n      <div className=\"container main-form-container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6 offset-md-3\">\r\n            <div className=\"form-contianer\">\r\n              <h3 className=\"title\">registeration</h3>\r\n              <form action=\"\" className=\"form\" onSubmit={onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <label>Name</label>\r\n\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    id=\"\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"\"\r\n                    value={user.name}\r\n                    onChange={inputOnChange}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label>E-mail</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"email\"\r\n                    id=\"\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"\"\r\n                    value={user.email}\r\n                    onChange={inputOnChange}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label>Password</label>\r\n                  <input\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    id=\"\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"\"\r\n                    value={user.password}\r\n                    onChange={inputOnChange}\r\n                  />\r\n                </div>\r\n\r\n                {/* <!-- age --> */}\r\n                <div className=\"form-group\">\r\n                  <label>Age</label>\r\n                  <input\r\n                    type=\"number\"\r\n                    name=\"age\"\r\n                    id=\"\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"\"\r\n                    value={user.age}\r\n                    onChange={inputOnChange}\r\n                  />\r\n                </div>\r\n\r\n                <Link to=\"/login\" className=\"reg-link\">\r\n                  I already have account\r\n                </Link>\r\n\r\n                <button\r\n                  className=\"submit\"\r\n                  value=\"submit\"\r\n                  className=\"submit-btn\"\r\n                >\r\n                  Submit\r\n                </button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Registeration;\r\n","F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\Components\\TodoList\\TodoList.jsx",["122","123"],"import React, { useEffect, useState } from \"react\";\r\nimport \"./TodoList.scss\";\r\nimport TodoForm from \"./TodoForm/TodoForm\";\r\nimport Todo from \"./Todo/Todo\";\r\nimport * as todoservice from \"../../Services/TodosService\";\r\nimport Loader from \"../Shared/Loader/Loader\";\r\n\r\nconst TodoList = () => {\r\n  let utoken = \"\";\r\n  let [toAddTask, settoAddTask] = useState({\r\n    description: \"\",\r\n  });\r\n\r\n  let [allTasks, setallTasks] = useState([]);\r\n  const [listLoading, setlistLoading] = useState(false);\r\n\r\n  let getAllTasks = () => {\r\n    setlistLoading(true);\r\n    utoken = JSON.parse(localStorage.getItem(\"todoToken\"));\r\n    todoservice.getAllTasks(utoken).then((res) => {\r\n      setallTasks(res.data.data);\r\n      setlistLoading(false);\r\n    });\r\n  };\r\n\r\n  let addTask = () => {\r\n    utoken = JSON.parse(localStorage.getItem(\"todoToken\"));\r\n    todoservice.addTask(utoken, toAddTask).then((res) => {\r\n      if (res.data.success) {\r\n        setallTasks([...allTasks, res.data.data]);\r\n        settoAddTask({\r\n          description: \"\",\r\n        });\r\n      }\r\n      console.log(res);\r\n    });\r\n  };\r\n\r\n  let onSubmitForm = (e) => {\r\n    e.preventDefault();\r\n    addTask();\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAllTasks();\r\n  }, []);\r\n\r\n  return (\r\n    <section className=\"todo-home-section\">\r\n      <TodoForm\r\n        toAddTask={toAddTask}\r\n        settoAddTask={settoAddTask}\r\n        onSubmitForm={onSubmitForm}\r\n      />\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6 offset-md-3\">\r\n            <ul className=\"todo-list\">\r\n              {<Loader />}\r\n              {allTasks &&\r\n                allTasks.map((task) => {\r\n                  return (\r\n                    <Todo\r\n                      key={task._id}\r\n                      task={task}\r\n                      allTasks={allTasks}\r\n                      setallTasks={setallTasks}\r\n                    />\r\n                  );\r\n                })}\r\n\r\n              {/* <Todo /> */}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\Components\\TodoList\\TodoForm\\TodoForm.jsx",[],"F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\Components\\TodoList\\Todo\\Todo.jsx",["124","125"],"import React from \"react\";\r\nimport * as todoservice from \"../../../Services/TodosService\";\r\n\r\nconst Todo = ({ task, allTasks, setallTasks }) => {\r\n  let utoken = \"\";\r\n  let toggleCompleted = (taskId, isCompleted) => {\r\n    utoken = JSON.parse(localStorage.getItem(\"todoToken\"));\r\n    todoservice.toggleCompleted(utoken, taskId, isCompleted).then((res) => {\r\n      console.log(\"toggleCompleted\", res);\r\n\r\n      let wantedElement = allTasks.find((el) => el._id == taskId);\r\n      let elementIndex = allTasks.indexOf(wantedElement);\r\n      allTasks[elementIndex].completed = !isCompleted;\r\n      debugger;\r\n      let newAllTasks = [...allTasks];\r\n\r\n      setallTasks(newAllTasks);\r\n    });\r\n  };\r\n\r\n  // =================================================\r\n  let deleteTask = (taskId) => {\r\n    utoken = JSON.parse(localStorage.getItem(\"todoToken\"));\r\n    todoservice.deleteTask(utoken, taskId).then((res) => {\r\n      console.log(\"delete response\", res);\r\n\r\n      let wantedElement = allTasks.find((el) => el._id == taskId);\r\n      let elementIndex = allTasks.indexOf(wantedElement);\r\n      allTasks.splice(elementIndex, 1);\r\n      let newAllTasks = [...allTasks];\r\n\r\n      setallTasks(newAllTasks);\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"todo\">\r\n        <li className={`todo-item ${task.completed && \"completed\"}`}>\r\n          {task.description}\r\n        </li>\r\n        <button\r\n          className=\"complete-btn\"\r\n          onClick={() => toggleCompleted(task._id, task.completed)}\r\n        >\r\n          <i className=\"fas fa-check\"></i>\r\n        </button>\r\n        <button className=\"trash-btn\" onClick={() => deleteTask(task._id)}>\r\n          <i className=\"fas fa-trash\"></i>\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Todo;\r\n","F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\Services\\AuthService.js",[],"F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\config.js",[],"F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\Services\\TodosService.js",[],["126","127"],"F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\Components\\ProtectedRoute.jsx",[],"F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\Components\\isAuthunticatedRoute.jsx",["128"],"F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\Components\\IsAuthunticatedRoute.jsx",[],"F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\Components\\Shared\\Loader\\Loader.jsx",[],"D:\\reactworkspace\\learning\\todolist\\src\\index.js",[],["129","130"],"D:\\reactworkspace\\learning\\todolist\\src\\Components\\TodoList\\TodoList.jsx",["131","132"],"D:\\reactworkspace\\learning\\todolist\\src\\Components\\Auth\\Login\\Login.jsx",["133"],"D:\\reactworkspace\\learning\\todolist\\src\\Components\\TodoList\\Todo\\Todo.jsx",["134","135","136"],"D:\\reactworkspace\\learning\\todolist\\src\\Components\\TodoList\\TodoForm\\TodoForm.jsx",[],"D:\\reactworkspace\\learning\\todolist\\src\\Components\\ProtectedRoute.jsx",[],"D:\\reactworkspace\\learning\\todolist\\src\\Components\\IsAuthunticatedRoute.jsx",[],{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","severity":1,"message":"142","line":34,"column":33,"nodeType":"143","endLine":34,"endColumn":38},{"ruleId":"141","severity":1,"message":"142","line":35,"column":38,"nodeType":"143","endLine":35,"endColumn":43},{"ruleId":"141","severity":1,"message":"142","line":45,"column":41,"nodeType":"143","endLine":45,"endColumn":46},{"ruleId":"144","severity":1,"message":"145","line":3,"column":18,"nodeType":"146","messageId":"147","endLine":3,"endColumn":29},{"ruleId":"148","severity":1,"message":"149","line":60,"column":21,"nodeType":"150","endLine":60,"endColumn":71},{"ruleId":"137","replacedBy":"151"},{"ruleId":"139","replacedBy":"152"},{"ruleId":"141","severity":1,"message":"142","line":89,"column":21,"nodeType":"143","endLine":89,"endColumn":43},{"ruleId":"141","severity":1,"message":"142","line":104,"column":19,"nodeType":"143","endLine":104,"endColumn":41},{"ruleId":"144","severity":1,"message":"153","line":15,"column":10,"nodeType":"146","messageId":"147","endLine":15,"endColumn":21},{"ruleId":"154","severity":1,"message":"155","line":46,"column":6,"nodeType":"156","endLine":46,"endColumn":8,"suggestions":"157"},{"ruleId":"158","severity":1,"message":"159","line":11,"column":56,"nodeType":"160","messageId":"161","endLine":11,"endColumn":58},{"ruleId":"158","severity":1,"message":"159","line":27,"column":56,"nodeType":"160","messageId":"161","endLine":27,"endColumn":58},{"ruleId":"137","replacedBy":"162"},{"ruleId":"139","replacedBy":"163"},{"ruleId":"164","severity":2,"message":"165","line":16,"column":6,"nodeType":"166","endLine":16,"endColumn":14},{"ruleId":"137","replacedBy":"167"},{"ruleId":"139","replacedBy":"168"},{"ruleId":"154","severity":1,"message":"155","line":70,"column":6,"nodeType":"156","endLine":70,"endColumn":8,"suggestions":"169"},{"ruleId":"154","severity":1,"message":"170","line":75,"column":6,"nodeType":"156","endLine":75,"endColumn":31,"suggestions":"171"},{"ruleId":"141","severity":1,"message":"142","line":89,"column":21,"nodeType":"143","endLine":89,"endColumn":43},{"ruleId":"144","severity":1,"message":"172","line":1,"column":27,"nodeType":"146","messageId":"147","endLine":1,"endColumn":36},{"ruleId":"158","severity":1,"message":"159","line":23,"column":56,"nodeType":"160","messageId":"161","endLine":23,"endColumn":58},{"ruleId":"158","severity":1,"message":"159","line":43,"column":56,"nodeType":"160","messageId":"161","endLine":43,"endColumn":58},"no-native-reassign",["173"],"no-negated-in-lhs",["174"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-unused-vars","'NavDropdown' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["173"],["174"],"'listLoading' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getAllTasks'. Either include it or remove the dependency array.","ArrayExpression",["175"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["173"],["174"],"react/jsx-no-undef","'Redirect' is not defined.","JSXIdentifier",["173"],["174"],["176"],"React Hook useEffect has a missing dependency: 'filterBy'. Either include it or remove the dependency array.",["177"],"'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"178","fix":"179"},{"desc":"178","fix":"180"},{"desc":"181","fix":"182"},"Update the dependencies array to be: [getAllTasks]",{"range":"183","text":"184"},{"range":"185","text":"184"},"Update the dependencies array to be: [allTasks, filterBy, filterByValue]",{"range":"186","text":"187"},[1221,1223],"[getAllTasks]",[1732,1734],[1785,1810],"[allTasks, filterBy, filterByValue]"]