[{"F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\index.js":"1","F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\reportWebVitals.js":"2","F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\Components\\Home\\Home.jsx":"3","F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\App.jsx":"4","F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\Components\\Shared\\HeaderComponent\\HeaderComponent.jsx":"5","F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\Components\\Shared\\Footer\\Footer.jsx":"6","F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\Components\\Auth\\Login\\Login.jsx":"7","F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\Components\\Auth\\Registeration\\Registeration.jsx":"8","F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\Components\\TodoList\\TodoList.jsx":"9","F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\Components\\TodoList\\TodoForm\\TodoForm.jsx":"10","F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\Components\\TodoList\\Todo\\Todo.jsx":"11","F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\Services\\AuthService.js":"12","F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\config.js":"13","F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\Services\\TodosService.js":"14","F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\Components\\ProtectedRoute.jsx":"15","F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\Components\\isAuthunticatedRoute.jsx":"16","F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\Components\\IsAuthunticatedRoute.jsx":"17","F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\Components\\Shared\\Loader\\Loader.jsx":"18","D:\\reactworkspace\\learning\\todolist\\src\\index.js":"19","D:\\reactworkspace\\learning\\todolist\\src\\Components\\TodoList\\TodoList.jsx":"20","D:\\reactworkspace\\learning\\todolist\\src\\Components\\Auth\\Login\\Login.jsx":"21","D:\\reactworkspace\\learning\\todolist\\src\\Components\\TodoList\\Todo\\Todo.jsx":"22","D:\\reactworkspace\\learning\\todolist\\src\\Components\\TodoList\\TodoForm\\TodoForm.jsx":"23","D:\\reactworkspace\\learning\\todolist\\src\\Components\\ProtectedRoute.jsx":"24","D:\\reactworkspace\\learning\\todolist\\src\\Components\\IsAuthunticatedRoute.jsx":"25","D:\\reactworkspace\\learning\\todolist\\src\\App.jsx":"26","D:\\reactworkspace\\learning\\todolist\\src\\Components\\Auth\\Registeration\\Registeration.jsx":"27","D:\\reactworkspace\\learning\\todolist\\src\\Services\\TodosService.js":"28","D:\\reactworkspace\\learning\\todolist\\src\\Components\\TodoList\\TodoPage\\TodoPage.jsx":"29","D:\\reactworkspace\\learning\\todolist\\src\\Components\\Shared\\HeaderComponent\\HeaderComponent.jsx":"30","D:\\reactworkspace\\learning\\todolist\\src\\Components\\Shared\\Field\\Field.jsx":"31"},{"size":504,"mtime":1609590775573,"results":"32","hashOfConfig":"33"},{"size":362,"mtime":1607939826535,"results":"34","hashOfConfig":"33"},{"size":361,"mtime":1609560749529,"results":"35","hashOfConfig":"33"},{"size":1980,"mtime":1609761603104,"results":"36","hashOfConfig":"33"},{"size":2503,"mtime":1609787353066,"results":"37","hashOfConfig":"33"},{"size":252,"mtime":1609596793717,"results":"38","hashOfConfig":"33"},{"size":3083,"mtime":1609839916120,"results":"39","hashOfConfig":"33"},{"size":3384,"mtime":1609686435838,"results":"40","hashOfConfig":"33"},{"size":2114,"mtime":1609840408662,"results":"41","hashOfConfig":"33"},{"size":1289,"mtime":1609787462274,"results":"42","hashOfConfig":"33"},{"size":1770,"mtime":1609720646643,"results":"43","hashOfConfig":"33"},{"size":2493,"mtime":1609761367012,"results":"44","hashOfConfig":"33"},{"size":397,"mtime":1609638248382,"results":"45","hashOfConfig":"33"},{"size":1892,"mtime":1609725647630,"results":"46","hashOfConfig":"33"},{"size":601,"mtime":1609786907619,"results":"47","hashOfConfig":"33"},{"size":506,"mtime":1609754426515,"results":"48","hashOfConfig":"33"},{"size":547,"mtime":1609757960801,"results":"49","hashOfConfig":"33"},{"size":311,"mtime":1609840205224,"results":"50","hashOfConfig":"33"},{"size":504,"mtime":1609590775573,"results":"51","hashOfConfig":"52"},{"size":3385,"mtime":1610111766466,"results":"53","hashOfConfig":"52"},{"size":3733,"mtime":1610158018289,"results":"54","hashOfConfig":"52"},{"size":2502,"mtime":1610140199350,"results":"55","hashOfConfig":"52"},{"size":1379,"mtime":1609995067023,"results":"56","hashOfConfig":"52"},{"size":601,"mtime":1609786907619,"results":"57","hashOfConfig":"52"},{"size":547,"mtime":1609757960801,"results":"58","hashOfConfig":"52"},{"size":2222,"mtime":1610067562593,"results":"59","hashOfConfig":"52"},{"size":3384,"mtime":1609686435838,"results":"60","hashOfConfig":"52"},{"size":3446,"mtime":1610125249999,"results":"61","hashOfConfig":"52"},{"size":3673,"mtime":1610126541000,"results":"62","hashOfConfig":"52"},{"size":2540,"mtime":1610141727223,"results":"63","hashOfConfig":"52"},{"size":537,"mtime":1610157962908,"results":"64","hashOfConfig":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},"fyjkkl",{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},"m7q2or",{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"114"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"114"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\index.js",[],["140","141"],"F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\reportWebVitals.js",[],"F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\Components\\Home\\Home.jsx",[],"F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\App.jsx",["142","143","144"],"F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\Components\\Shared\\HeaderComponent\\HeaderComponent.jsx",["145","146"],"F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\Components\\Shared\\Footer\\Footer.jsx",[],["147","148"],"F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\Components\\Auth\\Login\\Login.jsx",["149"],"import React, { useState, useContext } from \"react\";\r\nimport \"./Login.scss\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as authservices from \"../../../Services/AuthService\";\r\nimport { userTokenContext } from \"../../../App\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Loader from \"../../Shared/Loader/Loader\";\r\n\r\nconst Login = ({ userToken, setUserToken }) => {\r\n  let newUser = useContext(userTokenContext);\r\n  const [user, setUser] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  const [isLoading, setisLoading] = useState(false);\r\n  const history = useHistory();\r\n\r\n  let onchangeInput = (e) => {\r\n    setUser({\r\n      ...user,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n\r\n    console.log(newUser);\r\n    // console.log(\"userToken\", userToken);\r\n  };\r\n\r\n  let onSubmitForm = (e) => {\r\n    e.preventDefault();\r\n    setisLoading(true);\r\n    authservices.login(user).then((res) => {\r\n      setisLoading(false);\r\n      localStorage.setItem(\"todoToken\", JSON.stringify(res.token));\r\n      setUserToken(res.token);\r\n\r\n      setUser({\r\n        email: \"\",\r\n        password: \"\",\r\n      });\r\n      history.push(\"/todolist\");\r\n\r\n      // console.log(res);\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      <section className=\"login-section\">\r\n        <div className=\"container main-form-container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6 offset-md-3\">\r\n              <div className=\"form-contianer\">\r\n                {isLoading && <Loader />}\r\n                <h3 className=\"title\">login</h3>\r\n\r\n                <form className=\"form\" onSubmit={onSubmitForm}>\r\n                  <div className=\"form-group\">\r\n                    <label>E-mail</label>\r\n\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"email\"\r\n                      id=\"\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"example : demo@demo.com\"\r\n                      value={user.email}\r\n                      onChange={onchangeInput}\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <label>Password</label>\r\n                    <input\r\n                      type=\"password\"\r\n                      name=\"password\"\r\n                      id=\"\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"example : demodemo\"\r\n                      value={user.password}\r\n                      onChange={onchangeInput}\r\n                    />\r\n                  </div>\r\n\r\n                  <Link to=\"/register\" className=\"reg-link\">\r\n                    register new account\r\n                  </Link>\r\n\r\n                  <button\r\n                    className=\"submit\"\r\n                    value=\"submit\"\r\n                    className=\"submit-btn\"\r\n                  >\r\n                    Submit\r\n                  </button>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\Components\\Auth\\Registeration\\Registeration.jsx",["150"],"import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Registeration.scss\";\r\nimport * as authservices from \"../../../Services/AuthService\";\r\nimport { useHistory } from \"react-router-dom\";\r\nfunction Registeration() {\r\n  const [user, setUser] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    age: 0,\r\n  });\r\n  const history = useHistory();\r\n\r\n  let inputOnChange = (e) => {\r\n    setUser({\r\n      ...user,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  let onSubmit = (e) => {\r\n    e.preventDefault();\r\n    authservices.registeration(user).then((res) => {\r\n      setUser({\r\n        name: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        age: 0,\r\n      });\r\n      console.log(res);\r\n      history.push(\"/login\");\r\n    });\r\n  };\r\n  return (\r\n    <section className=\"login-section\">\r\n      <div className=\"container main-form-container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6 offset-md-3\">\r\n            <div className=\"form-contianer\">\r\n              <h3 className=\"title\">registeration</h3>\r\n              <form action=\"\" className=\"form\" onSubmit={onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <label>Name</label>\r\n\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    id=\"\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"\"\r\n                    value={user.name}\r\n                    onChange={inputOnChange}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label>E-mail</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"email\"\r\n                    id=\"\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"\"\r\n                    value={user.email}\r\n                    onChange={inputOnChange}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label>Password</label>\r\n                  <input\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    id=\"\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"\"\r\n                    value={user.password}\r\n                    onChange={inputOnChange}\r\n                  />\r\n                </div>\r\n\r\n                {/* <!-- age --> */}\r\n                <div className=\"form-group\">\r\n                  <label>Age</label>\r\n                  <input\r\n                    type=\"number\"\r\n                    name=\"age\"\r\n                    id=\"\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"\"\r\n                    value={user.age}\r\n                    onChange={inputOnChange}\r\n                  />\r\n                </div>\r\n\r\n                <Link to=\"/login\" className=\"reg-link\">\r\n                  I already have account\r\n                </Link>\r\n\r\n                <button\r\n                  className=\"submit\"\r\n                  value=\"submit\"\r\n                  className=\"submit-btn\"\r\n                >\r\n                  Submit\r\n                </button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Registeration;\r\n","F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\Components\\TodoList\\TodoList.jsx",["151","152"],"import React, { useEffect, useState } from \"react\";\r\nimport \"./TodoList.scss\";\r\nimport TodoForm from \"./TodoForm/TodoForm\";\r\nimport Todo from \"./Todo/Todo\";\r\nimport * as todoservice from \"../../Services/TodosService\";\r\nimport Loader from \"../Shared/Loader/Loader\";\r\n\r\nconst TodoList = () => {\r\n  let utoken = \"\";\r\n  let [toAddTask, settoAddTask] = useState({\r\n    description: \"\",\r\n  });\r\n\r\n  let [allTasks, setallTasks] = useState([]);\r\n  const [listLoading, setlistLoading] = useState(false);\r\n\r\n  let getAllTasks = () => {\r\n    setlistLoading(true);\r\n    utoken = JSON.parse(localStorage.getItem(\"todoToken\"));\r\n    todoservice.getAllTasks(utoken).then((res) => {\r\n      setallTasks(res.data.data);\r\n      setlistLoading(false);\r\n    });\r\n  };\r\n\r\n  let addTask = () => {\r\n    utoken = JSON.parse(localStorage.getItem(\"todoToken\"));\r\n    todoservice.addTask(utoken, toAddTask).then((res) => {\r\n      if (res.data.success) {\r\n        setallTasks([...allTasks, res.data.data]);\r\n        settoAddTask({\r\n          description: \"\",\r\n        });\r\n      }\r\n      console.log(res);\r\n    });\r\n  };\r\n\r\n  let onSubmitForm = (e) => {\r\n    e.preventDefault();\r\n    addTask();\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAllTasks();\r\n  }, []);\r\n\r\n  return (\r\n    <section className=\"todo-home-section\">\r\n      <TodoForm\r\n        toAddTask={toAddTask}\r\n        settoAddTask={settoAddTask}\r\n        onSubmitForm={onSubmitForm}\r\n      />\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6 offset-md-3\">\r\n            <ul className=\"todo-list\">\r\n              {<Loader />}\r\n              {allTasks &&\r\n                allTasks.map((task) => {\r\n                  return (\r\n                    <Todo\r\n                      key={task._id}\r\n                      task={task}\r\n                      allTasks={allTasks}\r\n                      setallTasks={setallTasks}\r\n                    />\r\n                  );\r\n                })}\r\n\r\n              {/* <Todo /> */}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\Components\\TodoList\\TodoForm\\TodoForm.jsx",[],"F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\Components\\TodoList\\Todo\\Todo.jsx",["153","154"],"import React from \"react\";\r\nimport * as todoservice from \"../../../Services/TodosService\";\r\n\r\nconst Todo = ({ task, allTasks, setallTasks }) => {\r\n  let utoken = \"\";\r\n  let toggleCompleted = (taskId, isCompleted) => {\r\n    utoken = JSON.parse(localStorage.getItem(\"todoToken\"));\r\n    todoservice.toggleCompleted(utoken, taskId, isCompleted).then((res) => {\r\n      console.log(\"toggleCompleted\", res);\r\n\r\n      let wantedElement = allTasks.find((el) => el._id == taskId);\r\n      let elementIndex = allTasks.indexOf(wantedElement);\r\n      allTasks[elementIndex].completed = !isCompleted;\r\n      debugger;\r\n      let newAllTasks = [...allTasks];\r\n\r\n      setallTasks(newAllTasks);\r\n    });\r\n  };\r\n\r\n  // =================================================\r\n  let deleteTask = (taskId) => {\r\n    utoken = JSON.parse(localStorage.getItem(\"todoToken\"));\r\n    todoservice.deleteTask(utoken, taskId).then((res) => {\r\n      console.log(\"delete response\", res);\r\n\r\n      let wantedElement = allTasks.find((el) => el._id == taskId);\r\n      let elementIndex = allTasks.indexOf(wantedElement);\r\n      allTasks.splice(elementIndex, 1);\r\n      let newAllTasks = [...allTasks];\r\n\r\n      setallTasks(newAllTasks);\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"todo\">\r\n        <li className={`todo-item ${task.completed && \"completed\"}`}>\r\n          {task.description}\r\n        </li>\r\n        <button\r\n          className=\"complete-btn\"\r\n          onClick={() => toggleCompleted(task._id, task.completed)}\r\n        >\r\n          <i className=\"fas fa-check\"></i>\r\n        </button>\r\n        <button className=\"trash-btn\" onClick={() => deleteTask(task._id)}>\r\n          <i className=\"fas fa-trash\"></i>\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Todo;\r\n","F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\Services\\AuthService.js",[],"F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\config.js",[],"F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\Services\\TodosService.js",[],["155","156"],"F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\Components\\ProtectedRoute.jsx",[],"F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\Components\\isAuthunticatedRoute.jsx",["157"],"F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\Components\\IsAuthunticatedRoute.jsx",[],"F:\\angularmean\\REACT-WORKSPACE\\todolist\\src\\Components\\Shared\\Loader\\Loader.jsx",[],"D:\\reactworkspace\\learning\\todolist\\src\\index.js",[],["158","159"],"D:\\reactworkspace\\learning\\todolist\\src\\Components\\TodoList\\TodoList.jsx",["160","161"],"import React, { useEffect, useState } from \"react\";\r\nimport \"./TodoList.scss\";\r\nimport TodoForm from \"./TodoForm/TodoForm\";\r\nimport Todo from \"./Todo/Todo\";\r\nimport * as todoservice from \"../../Services/TodosService\";\r\nimport Loader from \"../Shared/Loader/Loader\";\r\n\r\nconst TodoList = () => {\r\n  let utoken = \"\";\r\n  let [toAddTask, settoAddTask] = useState({\r\n    description: \"\",\r\n  });\r\n\r\n  let [allTasks, setallTasks] = useState([]);\r\n  let [filteredallTasks, setfilteredallTasks] = useState([]);\r\n\r\n\r\n  let [filterByValue, setfilterByValue] = useState(0);\r\n  const [listLoading, setlistLoading] = useState(false);\r\n\r\n\r\n\r\n\r\n  let getAllTasks = () => {\r\n    setlistLoading(true);\r\n    utoken = JSON.parse(localStorage.getItem(\"todoToken\"));\r\n    todoservice.getAllTasks(utoken).then((res) => {\r\n\r\n      console.log(res.data.data);\r\n      // res.data.data.fore\r\n\r\n      let newData = [];\r\n      res.data.data.forEach((element, index) => {\r\n        element['isLoadingDelete'] = false;\r\n        element['isLoadingToggle'] = false;\r\n\r\n        newData.push(element)\r\n\r\n      });\r\n      setallTasks(newData);\r\n      setlistLoading(false);\r\n    });\r\n  };\r\n\r\n  let addTask = () => {\r\n    utoken = JSON.parse(localStorage.getItem(\"todoToken\"));\r\n    todoservice.addTask(utoken, toAddTask).then((res) => {\r\n      if (res.data.success) {\r\n\r\n        res.data.data['isLoadingDelete'] = false;\r\n        res.data.data['isLoadingToggle'] = false;\r\n\r\n        setallTasks([...allTasks, res.data.data]);\r\n        settoAddTask({\r\n          description: \"\",\r\n        });\r\n      }\r\n      console.log(res);\r\n    });\r\n  };\r\n\r\n  let onSubmitForm = (e) => {\r\n    e.preventDefault();\r\n    addTask();\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    getAllTasks();\r\n  }, []);\r\n\r\n\r\n  useEffect(() => {\r\n    filterBy();\r\n  }, [allTasks, filterByValue])\r\n\r\n\r\n  let filterBy = () => {\r\n    let allTasksCpy = [...allTasks];\r\n\r\n    switch (+filterByValue) {\r\n      case 0:\r\n        setfilteredallTasks(allTasksCpy);\r\n        break;\r\n      case 1:\r\n        let newFilteredCpy = allTasksCpy.filter(el => { return el.completed === true });\r\n        setfilteredallTasks(newFilteredCpy);\r\n        break;\r\n      case 2:\r\n        let newFilteredCpy2 = allTasksCpy.filter(el => el.completed === false);\r\n        setfilteredallTasks(newFilteredCpy2);\r\n        break;\r\n      default:\r\n      // code block\r\n    }\r\n  }\r\n  return (\r\n    <section className=\"todo-home-section\">\r\n      <TodoForm\r\n        toAddTask={toAddTask}\r\n        settoAddTask={settoAddTask}\r\n        onSubmitForm={onSubmitForm}\r\n\r\n        filterByValue={filterByValue}\r\n        setfilterByValue={setfilterByValue}\r\n      />\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6 offset-md-3\">\r\n            <ul className=\"todo-list\">\r\n              {listLoading && filteredallTasks && <Loader />}\r\n              {filteredallTasks &&\r\n                filteredallTasks.map((task) => {\r\n                  return (\r\n                    <Todo\r\n                      key={task._id}\r\n                      task={task}\r\n                      allTasks={allTasks}\r\n                      setallTasks={setallTasks}\r\n                    />\r\n                  );\r\n                })}\r\n\r\n              {/* <Todo /> */}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n",["162","163"],"D:\\reactworkspace\\learning\\todolist\\src\\Components\\Auth\\Login\\Login.jsx",["164"],"D:\\reactworkspace\\learning\\todolist\\src\\Components\\TodoList\\Todo\\Todo.jsx",["165","166","167"],"import React, { useState, useEffect } from \"react\";\r\nimport * as todoservice from \"../../../Services/TodosService\";\r\nimport './Todo.scss'\r\nimport { Link } from 'react-router-dom';\r\nconst Todo = ({ task, allTasks, setallTasks }) => {\r\n  let utoken = \"\";\r\n  const [taskIsLoadingCompleted, settaskIsLoadingCompleted] = useState(false);\r\n  const [taskIsDeleteing, settaskIsDeleteing] = useState(false);\r\n\r\n\r\n  // useEffect(() => {\r\n  //   settaskIsLoadingCompleted(false);\r\n  //   debugger\r\n  // }, [allTasks])\r\n\r\n\r\n  // =======================================================================\r\n  let toggleCompleted = (taskId, isCompleted) => {\r\n    utoken = JSON.parse(localStorage.getItem(\"todoToken\"));\r\n    settaskIsLoadingCompleted(true)\r\n\r\n    todoservice.toggleCompleted(utoken, taskId, isCompleted).then((res) => {\r\n      console.log(\"toggleCompleted\", res);\r\n      let wantedElement = allTasks.find((el) => el._id == taskId);\r\n      allTasks[allTasks.indexOf(wantedElement)].completed = !isCompleted;\r\n      let newAllTasks = [...allTasks];\r\n      setallTasks(newAllTasks);\r\n      settaskIsLoadingCompleted(false)\r\n    })\r\n\r\n  };\r\n\r\n  // =================================================\r\n\r\n  // settaskIsDeleteing(true);\r\n  let deleteTask = (taskId) => {\r\n    settaskIsDeleteing(true);\r\n\r\n    utoken = JSON.parse(localStorage.getItem(\"todoToken\"));\r\n    todoservice.deleteTask(utoken, taskId).then((res) => {\r\n      console.log(\"delete response\", res);\r\n      settaskIsDeleteing(false);\r\n\r\n      let wantedElement = allTasks.find((el) => el._id == taskId);\r\n      let elementIndex = allTasks.indexOf(wantedElement);\r\n      allTasks.splice(elementIndex, 1);\r\n      let newAllTasks = [...allTasks];\r\n\r\n      setallTasks(newAllTasks);\r\n\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"todo\">\r\n        <Link to={`/todolist/${task._id}`} className=\"d-block flex-110 \">\r\n          <li className={`todo-item d-block flex-110 ${task.completed && \"completed\"}`}>\r\n            {task.description}\r\n          </li>\r\n        </Link>\r\n        <button\r\n          className=\"complete-btn\"\r\n          onClick={() => toggleCompleted(task._id, task.completed)}\r\n          disabled={taskIsLoadingCompleted}\r\n        >\r\n          <i className=\"fas fa-check\"></i>\r\n        </button>\r\n        <button className=\"trash-btn\" onClick={() => deleteTask(task._id)} disabled={taskIsDeleteing}>\r\n          <i className=\"fas fa-trash\"></i>\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Todo;\r\n","D:\\reactworkspace\\learning\\todolist\\src\\Components\\TodoList\\TodoForm\\TodoForm.jsx",[],"D:\\reactworkspace\\learning\\todolist\\src\\Components\\ProtectedRoute.jsx",[],"D:\\reactworkspace\\learning\\todolist\\src\\Components\\IsAuthunticatedRoute.jsx",[],"D:\\reactworkspace\\learning\\todolist\\src\\App.jsx",["168","169","170"],"import \"./App.scss\";\nimport { useState, createContext, useEffect } from \"react\";\n// components\nimport Home from \"./Components/Home/Home.jsx\";\nimport HeaderComponent from \"../src/Components/Shared/HeaderComponent/HeaderComponent\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Footer from \"./Components/Shared/Footer/Footer\";\nimport Login from \"./Components/Auth/Login/Login\";\nimport Registeration from \"./Components/Auth/Registeration/Registeration\";\nimport TodoList from \"./Components/TodoList/TodoList\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport ProtectedRoute from \"./Components/ProtectedRoute\";\nimport IsAuthunticatedRoute from \"./Components/IsAuthunticatedRoute\";\nimport TodoPage from \"./Components/TodoList/TodoPage/TodoPage\";\nimport * as authservice from \"./Services/AuthService\";\nexport let userTokenContext = createContext();\nfunction App() {\n  const [userToken, setUserToken] = useState(\"\");\n\n  let getTokenFromLocalStorage = () => {\n    if (authservice.checkAuthentication())\n      setUserToken(JSON.parse(localStorage.getItem(\"todoToken\")));\n  };\n\n  useEffect(() => {\n    getTokenFromLocalStorage();\n  }, []);\n  return (\n    <div className=\"\">\n      <Router>\n        <HeaderComponent userToken={userToken} setUserToken={setUserToken} />\n\n        <Switch>\n          <Route exact path=\"/\" exact component={Home} />\n          <Route exact path=\"/login\" exact>\n            <userTokenContext.Provider value={userToken}>\n              <IsAuthunticatedRoute\n                component={Login}\n                userToken={userToken}\n                setUserToken={setUserToken}\n              />\n            </userTokenContext.Provider>\n          </Route>\n\n          <Route exact path=\"/register\" exact component={Registeration} />\n\n          <ProtectedRoute\n            exact\n            path=\"/todolist\"\n            component={TodoList}\n            userToken={userToken}\n          ></ProtectedRoute>\n\n\n          <ProtectedRoute\n            exact\n            path=\"/todolist/:todoId\"\n            component={TodoPage}\n            userToken={userToken}\n          ></ProtectedRoute>\n        </Switch>\n\n        <Footer />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","D:\\reactworkspace\\learning\\todolist\\src\\Components\\Auth\\Registeration\\Registeration.jsx",["171"],"D:\\reactworkspace\\learning\\todolist\\src\\Services\\TodosService.js",[],"D:\\reactworkspace\\learning\\todolist\\src\\Components\\TodoList\\TodoPage\\TodoPage.jsx",["172"],"import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport * as taskServices from '../../../Services/TodosService';\r\nfunction TodoPage(props) {\r\n    const [curentTask, setCurrentTask] = useState({});\r\n    const history = useHistory();\r\n    let utoken = \"\"\r\n    // console.log(+props.computedMatch.params.todoId);\r\n\r\n    let getTask = () => {\r\n        let CurrentTaskIId = props.computedMatch.params.todoId;\r\n        utoken = JSON.parse(localStorage.getItem(\"todoToken\"));\r\n        taskServices.getSingleTask(utoken, CurrentTaskIId).then((res) => {\r\n            console.log(res.data);\r\n            if (res.data.success) {\r\n                setCurrentTask(res.data.data);\r\n            } else {\r\n\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    let updateTask = () => {\r\n        let CurrentTaskIId = props.computedMatch.params.todoId;\r\n        utoken = JSON.parse(localStorage.getItem(\"todoToken\"));\r\n\r\n        curentTask.description !== \"\" && taskServices.updateTask(utoken, CurrentTaskIId, curentTask.description).then(res => {\r\n            console.log('res', res);\r\n        })\r\n    }\r\n\r\n\r\n    let toggleComplete = () => {\r\n        let CurrentTaskIId = props.computedMatch.params.todoId;\r\n        utoken = JSON.parse(localStorage.getItem(\"todoToken\"));\r\n\r\n\r\n        curentTask.description !== \"\" && taskServices.toggleCompletedFull(utoken, CurrentTaskIId, curentTask.completed, curentTask.description).then(res => {\r\n            // console.log('res', res);\r\n\r\n            if (res.data.success) {\r\n                setCurrentTask(res.data.data);\r\n            } else {\r\n\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n\r\n    let deleteCuurentTask = () => {\r\n        let CurrentTaskIId = props.computedMatch.params.todoId;\r\n        utoken = JSON.parse(localStorage.getItem(\"todoToken\"));\r\n        taskServices.deleteTask(utoken, CurrentTaskIId).then(res => {\r\n            if (res.data.success) {\r\n                setCurrentTask({});\r\n                history.goBack();\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        getTask();\r\n    }, [])\r\n\r\n    let onChangeHandler = (e) => {\r\n        setCurrentTask({ ...curentTask, description: e.target.value })\r\n    }\r\n    return (\r\n        <section className=\"home\">\r\n            <div className=\"w-100\">\r\n\r\n\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-6 offset-lg-3\">\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\" name=\"\" className={`form-control ${curentTask.completed && 'completed'}`}\r\n                                    placeholder=\"Task\"\r\n                                    value={curentTask.description || ''} onChange={onChangeHandler} />\r\n                                <button name=\"\" className=\"btn btn-primary mx-1 mt-2\" onClick={updateTask}>\r\n                                    Submit\r\n                                </button>\r\n\r\n                                <button name=\"\" className=\"btn btn-success mx-1 mt-2\" onClick={() => toggleComplete(curentTask.completed)}>\r\n                                    {curentTask.completed ? 'not Finshed' : 'finished !'}\r\n                                </button>\r\n\r\n                                <button name=\"\" className=\"btn btn-danger mx-1 mt-2\" onClick={deleteCuurentTask}>\r\n                                    delete\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </section>\r\n\r\n    )\r\n}\r\n\r\nexport default TodoPage\r\n\r\n","D:\\reactworkspace\\learning\\todolist\\src\\Components\\Shared\\HeaderComponent\\HeaderComponent.jsx",["173","174"],"D:\\reactworkspace\\learning\\todolist\\src\\Components\\Shared\\Field\\Field.jsx",[],{"ruleId":"175","replacedBy":"176"},{"ruleId":"177","replacedBy":"178"},{"ruleId":"179","severity":1,"message":"180","line":34,"column":33,"nodeType":"181","endLine":34,"endColumn":38},{"ruleId":"179","severity":1,"message":"180","line":35,"column":38,"nodeType":"181","endLine":35,"endColumn":43},{"ruleId":"179","severity":1,"message":"180","line":45,"column":41,"nodeType":"181","endLine":45,"endColumn":46},{"ruleId":"182","severity":1,"message":"183","line":3,"column":18,"nodeType":"184","messageId":"185","endLine":3,"endColumn":29},{"ruleId":"186","severity":1,"message":"187","line":60,"column":21,"nodeType":"188","endLine":60,"endColumn":71},{"ruleId":"175","replacedBy":"189"},{"ruleId":"177","replacedBy":"190"},{"ruleId":"179","severity":1,"message":"180","line":89,"column":21,"nodeType":"181","endLine":89,"endColumn":43},{"ruleId":"179","severity":1,"message":"180","line":104,"column":19,"nodeType":"181","endLine":104,"endColumn":41},{"ruleId":"182","severity":1,"message":"191","line":15,"column":10,"nodeType":"184","messageId":"185","endLine":15,"endColumn":21},{"ruleId":"192","severity":1,"message":"193","line":46,"column":6,"nodeType":"194","endLine":46,"endColumn":8,"suggestions":"195"},{"ruleId":"196","severity":1,"message":"197","line":11,"column":56,"nodeType":"198","messageId":"199","endLine":11,"endColumn":58},{"ruleId":"196","severity":1,"message":"197","line":27,"column":56,"nodeType":"198","messageId":"199","endLine":27,"endColumn":58},{"ruleId":"175","replacedBy":"200"},{"ruleId":"177","replacedBy":"201"},{"ruleId":"202","severity":2,"message":"203","line":16,"column":6,"nodeType":"204","endLine":16,"endColumn":14},{"ruleId":"175","replacedBy":"205"},{"ruleId":"177","replacedBy":"206"},{"ruleId":"192","severity":1,"message":"193","line":70,"column":6,"nodeType":"194","endLine":70,"endColumn":8,"suggestions":"207"},{"ruleId":"192","severity":1,"message":"208","line":75,"column":6,"nodeType":"194","endLine":75,"endColumn":31,"suggestions":"209"},{"ruleId":"175","replacedBy":"210"},{"ruleId":"177","replacedBy":"211"},{"ruleId":"179","severity":1,"message":"180","line":103,"column":21,"nodeType":"181","endLine":103,"endColumn":43},{"ruleId":"182","severity":1,"message":"212","line":1,"column":27,"nodeType":"184","messageId":"185","endLine":1,"endColumn":36},{"ruleId":"196","severity":1,"message":"197","line":24,"column":56,"nodeType":"198","messageId":"199","endLine":24,"endColumn":58},{"ruleId":"196","severity":1,"message":"197","line":44,"column":56,"nodeType":"198","messageId":"199","endLine":44,"endColumn":58},{"ruleId":"179","severity":1,"message":"180","line":34,"column":33,"nodeType":"181","endLine":34,"endColumn":38},{"ruleId":"179","severity":1,"message":"180","line":35,"column":38,"nodeType":"181","endLine":35,"endColumn":43},{"ruleId":"179","severity":1,"message":"180","line":45,"column":41,"nodeType":"181","endLine":45,"endColumn":46},{"ruleId":"179","severity":1,"message":"180","line":104,"column":19,"nodeType":"181","endLine":104,"endColumn":41},{"ruleId":"192","severity":1,"message":"213","line":65,"column":8,"nodeType":"194","endLine":65,"endColumn":10,"suggestions":"214"},{"ruleId":"182","severity":1,"message":"183","line":3,"column":18,"nodeType":"184","messageId":"185","endLine":3,"endColumn":29},{"ruleId":"186","severity":1,"message":"187","line":61,"column":21,"nodeType":"188","endLine":61,"endColumn":71},"no-native-reassign",["215"],"no-negated-in-lhs",["216"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-unused-vars","'NavDropdown' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["215"],["216"],"'listLoading' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getAllTasks'. Either include it or remove the dependency array.","ArrayExpression",["217"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["215"],["216"],"react/jsx-no-undef","'Redirect' is not defined.","JSXIdentifier",["215"],["216"],["218"],"React Hook useEffect has a missing dependency: 'filterBy'. Either include it or remove the dependency array.",["219"],["215"],["216"],"'useEffect' is defined but never used.","React Hook useEffect has a missing dependency: 'getTask'. Either include it or remove the dependency array.",["220"],"no-global-assign","no-unsafe-negation",{"desc":"221","fix":"222"},{"desc":"221","fix":"223"},{"desc":"224","fix":"225"},{"desc":"226","fix":"227"},"Update the dependencies array to be: [getAllTasks]",{"range":"228","text":"229"},{"range":"230","text":"229"},"Update the dependencies array to be: [allTasks, filterBy, filterByValue]",{"range":"231","text":"232"},"Update the dependencies array to be: [getTask]",{"range":"233","text":"234"},[1221,1223],"[getAllTasks]",[1732,1734],[1785,1810],"[allTasks, filterBy, filterByValue]",[2084,2086],"[getTask]"]